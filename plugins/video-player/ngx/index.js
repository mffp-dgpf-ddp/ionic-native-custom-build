import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var VideoPlayer = /** @class */ (function (_super) {
    __extends(VideoPlayer, _super);
    function VideoPlayer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VideoPlayer.prototype.play = function (fileUrl, options) { return cordova(this, "play", {}, arguments); };
    VideoPlayer.prototype.close = function () { return cordova(this, "close", { "sync": true }, arguments); };
    VideoPlayer.pluginName = "VideoPlayer";
    VideoPlayer.plugin = "https://github.com/moust/cordova-plugin-videoplayer.git";
    VideoPlayer.pluginRef = "VideoPlayer";
    VideoPlayer.repo = "https://github.com/moust/cordova-plugin-videoplayer";
    VideoPlayer.platforms = ["Android"];
    VideoPlayer = __decorate([
        Injectable()
    ], VideoPlayer);
    return VideoPlayer;
}(IonicNativePlugin));
export { VideoPlayer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3ZpZGVvLXBsYXllci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFvRHZDLCtCQUFpQjs7OztJQVFoRCwwQkFBSSxhQUFDLE9BQWUsRUFBRSxPQUFzQjtJQVE1QywyQkFBSzs7Ozs7O0lBaEJNLFdBQVc7UUFEdkIsVUFBVSxFQUFFO09BQ0EsV0FBVztzQkFyRHhCO0VBcURpQyxpQkFBaUI7U0FBckMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcblxyXG4vKipcclxuICogT3B0aW9ucyBmb3IgdGhlIHZpZGVvIHBsYXliYWNrIHVzaW5nIHRoZSBgcGxheWAgZnVuY3Rpb24uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFZpZGVvT3B0aW9ucyB7XHJcbiAgLyoqXHJcbiAgICogU2V0IHRoZSBpbml0aWFsIHZvbHVtZSBvZiB0aGUgdmlkZW8gcGxheWJhY2ssIHdoZXJlIDAuMCBpcyAwJSB2b2x1bWUgYW5kIDEuMCBpcyAxMDAlLlxyXG4gICAqIEZvciBleGFtcGxlOiBmb3IgYSB2b2x1bWUgb2YgMzAlIHNldCB0aGUgdmFsdWUgdG8gMC4zLlxyXG4gICAqL1xyXG4gIHZvbHVtZT86IG51bWJlcjtcclxuICAvKipcclxuICAgKiBUaGVyZSBhcmUgdHdvIG9wdGlvbnMgZm9yIHRoZSBzY2FsaW5nIG1vZGUuIFNDQUxFX1RPX0ZJVCB3aGljaCBpcyBkZWZhdWx0IGFuZCBTQ0FMRV9UT19GSVRfV0lUSF9DUk9QUElORy5cclxuICAgKiBUaGVzZSBzdHJpbmdzIGFyZSB0aGUgb25seSBvbmVzIHdoaWNoIGNhbiBiZSBwYXNzZWQgYXMgb3B0aW9uLlxyXG4gICAqL1xyXG4gIHNjYWxpbmdNb2RlPzogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogQG5hbWUgVmlkZW8gUGxheWVyXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBBIENvcmRvdmEgcGx1Z2luIHRoYXQgc2ltcGx5IGFsbG93cyB5b3UgdG8gaW1tZWRpYXRlbHkgcGxheSBhIHZpZGVvIGluIGZ1bGxzY3JlZW4gbW9kZS5cclxuICpcclxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb20ubW91c3QuY29yZG92YS52aWRlb3BsYXllcmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtWaWRlb1BsYXllciBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL21vdXN0L2NvcmRvdmEtcGx1Z2luLXZpZGVvcGxheWVyKS5cclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgVmlkZW9QbGF5ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3ZpZGVvLXBsYXllci9uZ3gnO1xyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHZpZGVvUGxheWVyOiBWaWRlb1BsYXllcikgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKiAvLyBQbGF5aW5nIGEgdmlkZW8uXHJcbiAqIHRoaXMudmlkZW9QbGF5ZXIucGxheSgnZmlsZTovLy9hbmRyb2lkX2Fzc2V0L3d3dy9tb3ZpZS5tcDQnKS50aGVuKCgpID0+IHtcclxuICogIGNvbnNvbGUubG9nKCd2aWRlbyBjb21wbGV0ZWQnKTtcclxuICogfSkuY2F0Y2goZXJyID0+IHtcclxuICogIGNvbnNvbGUubG9nKGVycik7XHJcbiAqIH0pO1xyXG4gKlxyXG4gKiBgYGBcclxuICogQGludGVyZmFjZXNcclxuICogVmlkZW9PcHRpb25zXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnVmlkZW9QbGF5ZXInLFxyXG4gIHBsdWdpbjogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tb3VzdC9jb3Jkb3ZhLXBsdWdpbi12aWRlb3BsYXllci5naXQnLFxyXG4gIHBsdWdpblJlZjogJ1ZpZGVvUGxheWVyJyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL21vdXN0L2NvcmRvdmEtcGx1Z2luLXZpZGVvcGxheWVyJyxcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBWaWRlb1BsYXllciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcclxuICAvKipcclxuICAgKiBQbGF5cyB0aGUgdmlkZW8gZnJvbSB0aGUgcGFzc2VkIHVybC5cclxuICAgKiBAcGFyYW0gZmlsZVVybCB7c3RyaW5nfSBGaWxlIHVybCB0byB0aGUgdmlkZW8uXHJcbiAgICogQHBhcmFtIG9wdGlvbnMge1ZpZGVvT3B0aW9ucz99IE9wdGlvbmFsIHZpZGVvIHBsYXliYWNrIHNldHRpbmdzLiBTZWUgb3B0aW9ucyBhYm92ZS5cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXNvbHZlcyBwcm9taXNlIHdoZW4gdGhlIHZpZGVvIHdhcyBwbGF5ZWQgc3VjY2Vzc2Z1bGx5LlxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBwbGF5KGZpbGVVcmw6IHN0cmluZywgb3B0aW9ucz86IFZpZGVvT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wcyB0aGUgdmlkZW8gcGxheWJhY2sgaW1tZWRpYXRseS5cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBjbG9zZSgpOiB2b2lkIHt9XHJcbn1cclxuIl19