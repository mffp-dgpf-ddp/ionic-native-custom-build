import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var YoutubeVideoPlayer = /** @class */ (function (_super) {
    __extends(YoutubeVideoPlayer, _super);
    function YoutubeVideoPlayer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    YoutubeVideoPlayer.prototype.openVideo = function (videoId) { return cordova(this, "openVideo", { "sync": true }, arguments); };
    YoutubeVideoPlayer.pluginName = "YoutubeVideoPlayer";
    YoutubeVideoPlayer.plugin = "cordova-plugin-youtube-video-player";
    YoutubeVideoPlayer.pluginRef = "YoutubeVideoPlayer";
    YoutubeVideoPlayer.repo = "https://github.com/ihadeed/CordovaYoutubeVideoPlayer";
    YoutubeVideoPlayer.platforms = ["Android", "iOS"];
    YoutubeVideoPlayer = __decorate([
        Injectable()
    ], YoutubeVideoPlayer);
    return YoutubeVideoPlayer;
}(IonicNativePlugin));
export { YoutubeVideoPlayer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3lvdXR1YmUtdmlkZW8tcGxheWVyL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWtDaEMsc0NBQWlCOzs7O0lBTXZELHNDQUFTLGFBQUMsT0FBZTs7Ozs7O0lBTmQsa0JBQWtCO1FBRDlCLFVBQVUsRUFBRTtPQUNBLGtCQUFrQjs2QkFuQy9CO0VBbUN3QyxpQkFBaUI7U0FBNUMsa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuLyoqXHJcbiAqIEBuYW1lIFlvdXR1YmUgVmlkZW8gUGxheWVyXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBQbGF5cyBZb3VUdWJlIHZpZGVvcyBpbiBOYXRpdmUgWW91VHViZSBBcHBcclxuICpcclxuICogQHVzYWdlXHJcbiAqIEZvciBBbmRyb2lkIDUuMCsgeW91IHdpbGwgbmVlZCB0byBhZGQgdGhlIGZvbGxvd2luZyB0byBjb25maWcueG1sXHJcbiAqIGBgYHhtbFxyXG4gKiA8cHJlZmVyZW5jZSBuYW1lPVwiWW91VHViZURhdGFBcGlLZXlcIiB2YWx1ZT1cIltZT1VSIFlPVVRVQkUgQVBJXVwiIC8+XHJcbiAqIGBgYFxyXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbjogaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20veW91dHViZS92My9nZXR0aW5nLXN0YXJ0ZWRcclxuICpcclxuICpcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBZb3V0dWJlVmlkZW9QbGF5ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL3lvdXR1YmUtdmlkZW8tcGxheWVyL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgeW91dHViZTogWW91dHViZVZpZGVvUGxheWVyKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIHRoaXMueW91dHViZS5vcGVuVmlkZW8oJ215dmlkZW9pZCcpO1xyXG4gKlxyXG4gKiBgYGBcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdZb3V0dWJlVmlkZW9QbGF5ZXInLFxyXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXlvdXR1YmUtdmlkZW8tcGxheWVyJyxcclxuICBwbHVnaW5SZWY6ICdZb3V0dWJlVmlkZW9QbGF5ZXInLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaWhhZGVlZC9Db3Jkb3ZhWW91dHViZVZpZGVvUGxheWVyJyxcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcclxufSlcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgWW91dHViZVZpZGVvUGxheWVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIFBsYXlzIGEgWW91VHViZSB2aWRlb1xyXG4gICAqIEBwYXJhbSB2aWRlb0lkIHtzdHJpbmd9IFZpZGVvIElEXHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXHJcbiAgb3BlblZpZGVvKHZpZGVvSWQ6IHN0cmluZyk6IHZvaWQge31cclxufVxyXG4iXX0=