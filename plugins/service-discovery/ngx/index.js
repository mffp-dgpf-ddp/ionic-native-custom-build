import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var ServiceDiscovery = /** @class */ (function (_super) {
    __extends(ServiceDiscovery, _super);
    function ServiceDiscovery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ServiceDiscovery.prototype.getNetworkServices = function (service) { return cordova(this, "getNetworkServices", {}, arguments); };
    ServiceDiscovery.pluginName = "ServiceDiscovery";
    ServiceDiscovery.plugin = "cordova-plugin-discovery";
    ServiceDiscovery.pluginRef = "serviceDiscovery";
    ServiceDiscovery.repo = "https://github.com/scottdermott/cordova-plugin-discovery";
    ServiceDiscovery.platforms = ["Android", "iOS"];
    ServiceDiscovery = __decorate([
        Injectable()
    ], ServiceDiscovery);
    return ServiceDiscovery;
}(IonicNativePlugin));
export { ServiceDiscovery };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3NlcnZpY2UtZGlzY292ZXJ5L25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQStCbEMsb0NBQWlCOzs7O0lBT3JELDZDQUFrQixhQUFDLE9BQWU7Ozs7OztJQVB2QixnQkFBZ0I7UUFENUIsVUFBVSxFQUFFO09BQ0EsZ0JBQWdCOzJCQWhDN0I7RUFnQ3NDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBsdWdpbiwgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIFNlcnZpY2VEaXNjb3ZlcnlcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFNpbXBsZSBwbHVnaW4gdG8gZ2V0IGFueSBTU0RQIC8gVVBuUCAvIERMTkEgc2VydmljZSBvbiBhIGxvY2FsIG5ldHdvcmtcclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgU2VydmljZURpc2NvdmVyeSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc2VydmljZS1kaXNjb3ZlcnknO1xyXG4gKlxyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2VEaXNjb3Zlcnk6IFNlcnZpY2VEaXNjb3ZlcnkpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICpcclxuICogdGhpcy5zZXJ2aWNlRGlzY292ZXJ5LmdldE5ldHdvcmtTZXJ2aWNlcygnc3NkcDphbGwnKVxyXG4gKiAgIC50aGVuKGRldmljZXMgPT4gY29uc29sZS5sb2coZGV2aWNlcykpXHJcbiAqICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnU2VydmljZURpc2NvdmVyeScsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGlzY292ZXJ5JyxcclxuICBwbHVnaW5SZWY6ICdzZXJ2aWNlRGlzY292ZXJ5JyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3Njb3R0ZGVybW90dC9jb3Jkb3ZhLXBsdWdpbi1kaXNjb3ZlcnknLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTZXJ2aWNlRGlzY292ZXJ5IGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIEZpbmRzIGFuZCByZXR1cm5zIG1ldGFkYXRhIGFib3V0IGRldmljZXMgZGlzY292ZXJlZCBvbiB0aGUgbmV0d29yayB2aWEgU1NEUCAvIFVQblAgLyBETE5BXHJcbiAgICogQHBhcmFtIHNlcnZpY2Uge3N0cmluZ30gVGhlIHNlcnZpY2UgbmFtZSB0byBkaXNjb3ZlclxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGdldE5ldHdvcmtTZXJ2aWNlcyhzZXJ2aWNlOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=