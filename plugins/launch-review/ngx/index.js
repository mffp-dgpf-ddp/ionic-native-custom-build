import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var LaunchReview = /** @class */ (function (_super) {
    __extends(LaunchReview, _super);
    function LaunchReview() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LaunchReview.prototype.launch = function (appId) { return cordova(this, "launch", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    LaunchReview.prototype.rating = function () { return cordova(this, "rating", { "observable": true }, arguments); };
    LaunchReview.prototype.isRatingSupported = function () { return cordova(this, "isRatingSupported", { "platforms": ["Android", "iOS"], "sync": true }, arguments); };
    LaunchReview.pluginName = "LaunchReview";
    LaunchReview.plugin = "cordova-launch-review";
    LaunchReview.pluginRef = "LaunchReview";
    LaunchReview.repo = "https://github.com/dpa99c/cordova-launch-review";
    LaunchReview.platforms = ["Android", "iOS"];
    LaunchReview = __decorate([
        Injectable()
    ], LaunchReview);
    return LaunchReview;
}(IonicNativePlugin));
export { LaunchReview };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2xhdW5jaC1yZXZpZXcvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7SUFtQ0EsZ0NBQWlCOzs7O0lBVWpELDZCQUFNLGFBQUMsS0FBYztJQWNyQiw2QkFBTTtJQVVOLHdDQUFpQjs7Ozs7O0lBbENOLFlBQVk7UUFEeEIsVUFBVSxFQUFFO09BQ0EsWUFBWTt1QkFyQ3pCO0VBcUNrQyxpQkFBaUI7U0FBdEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuXHJcbi8qKlxyXG4gKiBAbmFtZSBMYXVuY2ggUmV2aWV3XHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKlxyXG4gKiBBc3Npc3RzIGluIGxlYXZpbmcgdXNlciByZXZpZXdzL3JhdGluZ3MgaW4gdGhlIEFwcCBTdG9yZXMuXHJcbiAqIC0gTGF1bmNoZXMgdGhlIHBsYXRmb3JtJ3MgQXBwIFN0b3JlIHBhZ2UgZm9yIHRoZSBjdXJyZW50IGFwcCBpbiBvcmRlciBmb3IgdGhlIHVzZXIgdG8gbGVhdmUgYSByZXZpZXcuXHJcbiAqIC0gT24gaU9TICgxMC4zIGFuZCBhYm92ZSkgaW52b2tlcyB0aGUgbmF0aXZlIGluLWFwcCByYXRpbmcgZGlhbG9nIHdoaWNoIGFsbG93cyBhIHVzZXIgdG8gcmF0ZSB5b3VyIGFwcCB3aXRob3V0IG5lZWRpbmcgdG8gb3BlbiB0aGUgQXBwIFN0b3JlLlxyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBMYXVuY2hSZXZpZXcgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2xhdW5jaC1yZXZpZXcvbmd4JztcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBsYXVuY2hSZXZpZXc6IExhdW5jaFJldmlldykgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKiB0aGlzLmxhdW5jaFJldmlldy5sYXVuY2goKVxyXG4gKiAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgbGF1bmNoZWQgc3RvcmUgYXBwJykpO1xyXG4gKlxyXG4gKiBpZih0aGlzLmxhdW5jaFJldmlldy5pc1JhdGluZ1N1cHBvcnRlZCgpKXtcclxuICogICB0aGlzLmxhdW5jaFJldmlldy5yYXRpbmcoKVxyXG4gKiAgICAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ1N1Y2Nlc3NmdWxseSBsYXVuY2hlZCByYXRpbmcgZGlhbG9nJykpO1xyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0xhdW5jaFJldmlldycsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1sYXVuY2gtcmV2aWV3JyxcclxuICBwbHVnaW5SZWY6ICdMYXVuY2hSZXZpZXcnLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZHBhOTljL2NvcmRvdmEtbGF1bmNoLXJldmlldycsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIExhdW5jaFJldmlldyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcclxuICAvKipcclxuICAgKiBMYXVuY2hlcyBBcHAgU3RvcmUgb24gY3VycmVudCBwbGF0Zm9ybSBpbiBvcmRlciB0byBsZWF2ZSBhIHJldmlldyBmb3IgZ2l2ZW4gYXBwLlxyXG4gICAqIEBwYXJhbSBhcHBJZCB7c3RyaW5nfSAtIChvcHRpb25hbCkgdGhlIHBsYXRmb3JtLXNwZWNpZmljIGFwcCBJRCB0byB1c2UgdG8gb3BlbiB0aGUgcGFnZSBpbiB0aGUgc3RvcmUgYXBwLlxyXG4gICAqIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBwbHVnaW4gd2lsbCB1c2UgdGhlIGFwcCBJRCBmb3IgdGhlIGFwcCBpbiB3aGljaCB0aGUgcGx1Z2luIGlzIGNvbnRhaW5lZC5cclxuICAgKiBPbiBBbmRyb2lkIHRoaXMgaXMgdGhlIGZ1bGwgcGFja2FnZSBuYW1lIG9mIHRoZSBhcHAuIEZvciBleGFtcGxlLCBmb3IgR29vZ2xlIE1hcHM6IGBjb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy5tYXBzYFxyXG4gICAqIE9uIGlPUyB0aGlzIGlzIHRoZSBBcHBsZSBJRCBvZiB0aGUgYXBwLiBGb3IgZXhhbXBsZSwgZm9yIEdvb2dsZSBNYXBzOiBgNTg1MDI3MzU0YFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyB9KVxyXG4gIGxhdW5jaChhcHBJZD86IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW52b2tlcyB0aGUgbmF0aXZlIGluLWFwcCByYXRpbmcgZGlhbG9nIHdoaWNoIGFsbG93cyBhIHVzZXIgdG8gcmF0ZSB5b3VyIGFwcCB3aXRob3V0IG5lZWRpbmcgdG8gb3BlbiB0aGUgQXBwIFN0b3JlLlxyXG4gICAqIFJlcXVpcmVzIGlPUyAxMC4zIGFuZCBhYm92ZTogQ2FsbGluZyB0aGlzIG9uIGFueSBwbGF0Zm9ybS92ZXJzaW9uIG90aGVyIHRoYW4gaU9TIDEwLjMrIHdpbGwgcmVzdWx0IGluIHRoZSBlcnJvciBjYWxsYmFjay5cclxuICAgKiBTdWNjZXNzIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHVwIHRvIDMgdGltZXM6XHJcbiAgICogLSBGaXJzdDogYWZ0ZXIgYExhdW5jaFJldmlldy5yYXRpbmcoKWAgaXMgY2FsbGVkIGFuZCB0aGUgcmVxdWVzdCB0byBzaG93IHRoZSBkaWFsb2cgaXMgc3VjY2Vzc2Z1bC4gV2lsbCBiZSBwYXNzZWQgdGhlIHZhbHVlIGByZXF1ZXN0ZWRgLlxyXG4gICAqIC0gU2Vjb25kOiBpZiBhbmQgd2hlbiB0aGUgUmF0aW5nIGRpYWxvZyBpcyBhY3R1YWxseSBkaXNwbGF5ZWQuICBXaWxsIGJlIHBhc3NlZCB0aGUgdmFsdWUgYHNob3duYC5cclxuICAgKiAtIFRoaXJkOiBpZiBhbmQgd2hlbiB0aGUgUmF0aW5nIGRpYWxvZyBpcyBkaXNtaXNzZWQuICBXaWxsIGJlIHBhc3NlZCB0aGUgdmFsdWUgYGRpc21pc3NlZGAuXHJcbiAgICogQHJldHVybnMge09ic2VydmFibGU8c3RyaW5nPn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IG9ic2VydmFibGU6IHRydWUgfSlcclxuICByYXRpbmcoKTogT2JzZXJ2YWJsZTxzdHJpbmc+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyBpZiB0aGUgY3VycmVudCBwbGF0Zm9ybS92ZXJzaW9uIHN1cHBvcnRzIGluLWFwcCByYXRpbmdzIGRpYWxvZywgaS5lLiBjYWxsaW5nIExhdW5jaFJldmlldy5yYXRpbmcoKS5cclxuICAgKiBXaWxsIHJldHVybiB0cnVlIGlmIGN1cnJlbnQgcGxhdGZvcm0gaXMgaU9TIDEwLjMgb3IgYWJvdmUuXHJcbiAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSwgc3luYzogdHJ1ZSB9KVxyXG4gIGlzUmF0aW5nU3VwcG9ydGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=