import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var DeviceMotion = /** @class */ (function (_super) {
    __extends(DeviceMotion, _super);
    function DeviceMotion() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeviceMotion.prototype.getCurrentAcceleration = function () { return cordova(this, "getCurrentAcceleration", {}, arguments); };
    DeviceMotion.prototype.watchAcceleration = function (options) { return cordova(this, "watchAcceleration", { "callbackOrder": "reverse", "observable": true, "clearFunction": "clearWatch" }, arguments); };
    DeviceMotion.pluginName = "DeviceMotion";
    DeviceMotion.plugin = "cordova-plugin-device-motion";
    DeviceMotion.pluginRef = "navigator.accelerometer";
    DeviceMotion.repo = "https://github.com/apache/cordova-plugin-device-motion";
    DeviceMotion.platforms = ["Android", "BlackBerry 10", "Browser", "Firefox OS", "iOS", "Tizen", "Ubuntu", "Windows", "Windows Phone 8"];
    DeviceMotion = __decorate([
        Injectable()
    ], DeviceMotion);
    return DeviceMotion;
}(IonicNativePlugin));
export { DeviceMotion };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2RldmljZS1tb3Rpb24vbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFDeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7SUFpRkEsZ0NBQWlCOzs7O0lBTWpELDZDQUFzQjtJQWN0Qix3Q0FBaUIsYUFBQyxPQUEwQzs7Ozs7O0lBcEJqRCxZQUFZO1FBRHhCLFVBQVUsRUFBRTtPQUNBLFlBQVk7dUJBbkZ6QjtFQW1Ga0MsaUJBQWlCO1NBQXRDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGEge1xyXG4gIC8qKlxyXG4gICAqIEFtb3VudCBvZiBhY2NlbGVyYXRpb24gb24gdGhlIHgtYXhpcy4gKGluIG0vc14yKVxyXG4gICAqL1xyXG4gIHg6IG51bWJlcjtcclxuXHJcbiAgLyoqXHJcbiAgICogQW1vdW50IG9mIGFjY2VsZXJhdGlvbiBvbiB0aGUgeS1heGlzLiAoaW4gbS9zXjIpXHJcbiAgICovXHJcbiAgeTogbnVtYmVyO1xyXG5cclxuICAvKipcclxuICAgKiBBbW91bnQgb2YgYWNjZWxlcmF0aW9uIG9uIHRoZSB6LWF4aXMuIChpbiBtL3NeMilcclxuICAgKi9cclxuICB6OiBudW1iZXI7XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0aW9uIHRpbWVzdGFtcCBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICovXHJcbiAgdGltZXN0YW1wOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlTW90aW9uQWNjZWxlcm9tZXRlck9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIFJlcXVlc3RlZCBwZXJpb2Qgb2YgY2FsbHMgdG8gYWNjZWxlcm9tZXRlclN1Y2Nlc3Mgd2l0aCBhY2NlbGVyYXRpb24gZGF0YSBpbiBNaWxsaXNlY29uZHMuIERlZmF1bHQ6IDEwMDAwXHJcbiAgICovXHJcbiAgZnJlcXVlbmN5PzogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogQG5hbWUgRGV2aWNlIE1vdGlvblxyXG4gKiBAZGVzY3JpcHRpb25cclxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1kZXZpY2UtbW90aW9uYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW0RldmljZSBNb3Rpb24gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1kZXZpY2UtbW90aW9uKS5cclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgRGV2aWNlTW90aW9uLCBEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9kZXZpY2UtbW90aW9uL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZGV2aWNlTW90aW9uOiBEZXZpY2VNb3Rpb24pIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogLy8gR2V0IHRoZSBkZXZpY2UgY3VycmVudCBhY2NlbGVyYXRpb25cclxuICogdGhpcy5kZXZpY2VNb3Rpb24uZ2V0Q3VycmVudEFjY2VsZXJhdGlvbigpLnRoZW4oXHJcbiAqICAgKGFjY2VsZXJhdGlvbjogRGV2aWNlTW90aW9uQWNjZWxlcmF0aW9uRGF0YSkgPT4gY29uc29sZS5sb2coYWNjZWxlcmF0aW9uKSxcclxuICogICAoZXJyb3I6IGFueSkgPT4gY29uc29sZS5sb2coZXJyb3IpXHJcbiAqICk7XHJcbiAqXHJcbiAqIC8vIFdhdGNoIGRldmljZSBhY2NlbGVyYXRpb25cclxuICogdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuZGV2aWNlTW90aW9uLndhdGNoQWNjZWxlcmF0aW9uKCkuc3Vic2NyaWJlKChhY2NlbGVyYXRpb246IERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGEpID0+IHtcclxuICogICBjb25zb2xlLmxvZyhhY2NlbGVyYXRpb24pO1xyXG4gKiB9KTtcclxuICpcclxuICogLy8gU3RvcCB3YXRjaFxyXG4gKiBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcclxuICpcclxuICogYGBgXHJcbiAqIEBpbnRlcmZhY2VzXHJcbiAqIERldmljZU1vdGlvbkFjY2VsZXJhdGlvbkRhdGFcclxuICogRGV2aWNlTW90aW9uQWNjZWxlcm9tZXRlck9wdGlvbnNcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdEZXZpY2VNb3Rpb24nLFxyXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRldmljZS1tb3Rpb24nLFxyXG4gIHBsdWdpblJlZjogJ25hdmlnYXRvci5hY2NlbGVyb21ldGVyJyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1kZXZpY2UtbW90aW9uJyxcclxuICBwbGF0Zm9ybXM6IFtcclxuICAgICdBbmRyb2lkJyxcclxuICAgICdCbGFja0JlcnJ5IDEwJyxcclxuICAgICdCcm93c2VyJyxcclxuICAgICdGaXJlZm94IE9TJyxcclxuICAgICdpT1MnLFxyXG4gICAgJ1RpemVuJyxcclxuICAgICdVYnVudHUnLFxyXG4gICAgJ1dpbmRvd3MnLFxyXG4gICAgJ1dpbmRvd3MgUGhvbmUgOCcsXHJcbiAgXSxcclxufSlcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRGV2aWNlTW90aW9uIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIEdldCB0aGUgY3VycmVudCBhY2NlbGVyYXRpb24gYWxvbmcgdGhlIHgsIHksIGFuZCB6IGF4ZXMuXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8RGV2aWNlTW90aW9uQWNjZWxlcmF0aW9uRGF0YT59IFJldHVybnMgb2JqZWN0IHdpdGggeCwgeSwgeiwgYW5kIHRpbWVzdGFtcCBwcm9wZXJ0aWVzXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGdldEN1cnJlbnRBY2NlbGVyYXRpb24oKTogUHJvbWlzZTxEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBXYXRjaCB0aGUgZGV2aWNlIGFjY2VsZXJhdGlvbi4gQ2xlYXIgdGhlIHdhdGNoIGJ5IHVuc3Vic2NyaWJpbmcgZnJvbSB0aGUgb2JzZXJ2YWJsZS5cclxuICAgKiBAcGFyYW0ge0FjY2VsZXJvbWV0ZXJPcHRpb25zfSBvcHRpb25zIGxpc3Qgb2Ygb3B0aW9ucyBmb3IgdGhlIGFjY2VsZXJvbWV0ZXIuXHJcbiAgICogQHJldHVybnMge09ic2VydmFibGU8RGV2aWNlTW90aW9uQWNjZWxlcmF0aW9uRGF0YT59IE9ic2VydmFibGUgcmV0dXJucyBhbiBvYnNlcnZhYmxlIHRoYXQgeW91IGNhbiBzdWJzY3JpYmUgdG9cclxuICAgKi9cclxuICBAQ29yZG92YSh7XHJcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScsXHJcbiAgICBvYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgY2xlYXJGdW5jdGlvbjogJ2NsZWFyV2F0Y2gnLFxyXG4gIH0pXHJcbiAgd2F0Y2hBY2NlbGVyYXRpb24ob3B0aW9ucz86IERldmljZU1vdGlvbkFjY2VsZXJvbWV0ZXJPcHRpb25zKTogT2JzZXJ2YWJsZTxEZXZpY2VNb3Rpb25BY2NlbGVyYXRpb25EYXRhPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiJdfQ==