import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var EmmAppConfig = /** @class */ (function (_super) {
    __extends(EmmAppConfig, _super);
    function EmmAppConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmmAppConfig.prototype.getValue = function (configKey) { return cordova(this, "getValue", { "sync": true }, arguments); };
    EmmAppConfig.prototype.registerChangedListener = function () { return cordova(this, "registerChangedListener", { "observable": true }, arguments); };
    EmmAppConfig.platforms = ["Android", "iOS"];
    EmmAppConfig.plugin = "cordova-plugin-emm-app-config";
    EmmAppConfig.pluginName = "EmmAppConfig";
    EmmAppConfig.pluginRef = "cordova.plugins.EmmAppConfig";
    EmmAppConfig.repo = "https://github.com/oracle/cordova-plugin-emm-app-config";
    EmmAppConfig = __decorate([
        Injectable()
    ], EmmAppConfig);
    return EmmAppConfig;
}(IonicNativePlugin));
export { EmmAppConfig };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2VtbS1hcHAtY29uZmlnL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0lBdUNBLGdDQUFpQjs7OztJQU14QiwrQkFBUSxhQUFDLFNBQWtCO0lBUXJCLDhDQUF1Qjs7Ozs7O0lBZDNDLFlBQVk7UUFEeEIsVUFBVSxFQUFFO09BQ0EsWUFBWTt1QkF6Q3pCO0VBeUNrQyxpQkFBaUI7U0FBdEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuXHJcbi8qKlxyXG4gKiBAbmFtZSBFbW0gQXBwIENvbmZpZ1xyXG4gKiBAZGVzY3JpcHRpb25cclxuICogVGhpcyBwbHVnaW4gcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gRU1NIGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb25cclxuICpcclxuICogUmVxdWlyZXMgdGhlIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tZW1tLWFwcC1jb25maWdgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbQ29yZG92YSBFTU0gQXBwIENvbmZpZyBQbHVnaW4gRG9jc10oaHR0cHM6Ly9naXRodWIuY29tL29yYWNsZS9jb3Jkb3ZhLXBsdWdpbi1lbW0tYXBwLWNvbmZpZykuXHJcbiAqXHJcbiAqXHJcbiAqIEB1c2FnZVxyXG4gKiBgYGB0eXBlc2NyaXB0XHJcbiAqIGltcG9ydCB7IEVtbUFwcENvbmZpZyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZW1tLWFwcC1jb25maWcvbmd4JztcclxuICpcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBlbW1BcHBDb25maWc6IEVtbUFwcENvbmZpZykgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKiAvLyBHZXQgYWxsIHRoZSB2YWx1ZXMgb2YgdGhlIGVtbSBhcHAgY29uZmlndXJhdGlvblxyXG4gKiBjb25zdCB2YWx1ZXMgPSB0aGlzLmVtbUFwcENvbmZpZy5nZXRWYWx1ZSgpO1xyXG4gKlxyXG4gKiAvLyBHZXQgc3BlY2lmaWMgdmFsdWUgb2YgdGhlIGVtbSBhcHAgY29uZmlndXJhdGlvblxyXG4gKiBjb25zdCB2YWx1ZSA9IHRoaXMuZW1tQXBwQ29uZmlnLmdldFZhbHVlKCdzZXJ2ZXJVcmwnKTtcclxuICpcclxuICogLy8gR2V0IGFuIGV2ZW50IGV2ZXJ5IHRpbWUgdGhlIGVtbSBhcHAgY29uZmlnIGNoYW5nZXNcclxuICogdGhpcy5lbW1BcHBDb25maWcucmVnaXN0ZXJDaGFuZ2VkTGlzdGVuZXIoKVxyXG4gKiAgIC5zdWJzY3JpYmUoKCkgPT4gY29uc29sZS5sb2coJ0FwcCBjb25maWcgY2hhbmdlcycpKTtcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcclxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1lbW0tYXBwLWNvbmZpZycsXHJcbiAgcGx1Z2luTmFtZTogJ0VtbUFwcENvbmZpZycsXHJcbiAgcGx1Z2luUmVmOiAnY29yZG92YS5wbHVnaW5zLkVtbUFwcENvbmZpZycsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9vcmFjbGUvY29yZG92YS1wbHVnaW4tZW1tLWFwcC1jb25maWcnLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBFbW1BcHBDb25maWcgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogR2V0IHZhbHVlIGZyb20gdGhlIEVtbSBhcHBsaWNhdGlvbiBjb25maWd1cmF0aW9uLlxyXG4gICAqIEBwYXJhbSBjb25maWdLZXkge3N0cmluZ30gIEtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LCBvciBudWxsIHRvIGdldCBhbGwgdGhlIHZhbHVlcyBhcyBhbiBvYmplY3QuXHJcbiAgICogQHJldHVybiB7YW55fSBSZXR1cm5zIGNvbmZpZ3VyYXRpb24gb24gYW4gb2JqZWN0XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pIGdldFZhbHVlKGNvbmZpZ0tleT86IHN0cmluZyk6IGFueSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWdpc3RlciBhIGxpc3RlbmVyIHRoYXQgd2lsbCBiZSBpbnZva2VkIHdoZW4gdGhlIGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb24gaXMgY2hhbmdlZC5cclxuICAgKiBAcmV0dXJuIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgb2JzZXJ2YWJsZTogdHJ1ZSB9KSByZWdpc3RlckNoYW5nZWRMaXN0ZW5lcigpOiBPYnNlcnZhYmxlPHZvaWQ+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19