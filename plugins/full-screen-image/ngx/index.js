import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var FullScreenImage = /** @class */ (function (_super) {
    __extends(FullScreenImage, _super);
    function FullScreenImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FullScreenImage.prototype.showImageURL = function (url) { return cordova(this, "showImageURL", { "sync": true }, arguments); };
    FullScreenImage.prototype.showImageBase64 = function (base64String, name, type) { return cordova(this, "showImageBase64", { "sync": true }, arguments); };
    FullScreenImage.pluginName = "FullScreenImage";
    FullScreenImage.plugin = "es.keensoft.fullscreenimage";
    FullScreenImage.pluginRef = "FullScreenImage";
    FullScreenImage.repo = "https://github.com/keensoft/FullScreenImage-Cordova-Plugin";
    FullScreenImage.platforms = ["Android", "iOS"];
    FullScreenImage = __decorate([
        Injectable()
    ], FullScreenImage);
    return FullScreenImage;
}(IonicNativePlugin));
export { FullScreenImage };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2Z1bGwtc2NyZWVuLWltYWdlL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQW9DbkMsbUNBQWlCOzs7O0lBT3BELHNDQUFZLGFBQUMsR0FBVztJQVl4Qix5Q0FBZSxhQUFDLFlBQW9CLEVBQUUsSUFBYSxFQUFFLElBQWE7Ozs7OztJQW5CdkQsZUFBZTtRQUQzQixVQUFVLEVBQUU7T0FDQSxlQUFlOzBCQXJDNUI7RUFxQ3FDLGlCQUFpQjtTQUF6QyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQbHVnaW4sIENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBAbmFtZSBGdWxsIFNjcmVlbiBJbWFnZVxyXG4gKiBAZGVzY3JpcHRpb25cclxuICogVGhpcyBwbHVnaW4gZG9lcyBzb21ldGhpbmdcclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgRnVsbFNjcmVlbkltYWdlIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9mdWxsLXNjcmVlbi1pbWFnZSc7XHJcbiAqXHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZnVsbFNjcmVlbkltYWdlOiBGdWxsU2NyZWVuSW1hZ2UpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogdGhpcy5mdWxsU2NyZWVuSW1hZ2Uuc2hvd0ltYWdlVVJMKCcvYXNzZXRzLy4uLicpXHJcbiAqICAgLnRoZW4oKGRhdGE6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcclxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqIHRoaXMuZnVsbFNjcmVlbkltYWdlLnNob3dJbWFnZUJhc2U2NCgnaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQS4uLicpXHJcbiAqICAgLnRoZW4oKGRhdGE6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcclxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnRnVsbFNjcmVlbkltYWdlJyxcclxuICBwbHVnaW46ICdlcy5rZWVuc29mdC5mdWxsc2NyZWVuaW1hZ2UnLFxyXG4gIHBsdWdpblJlZjogJ0Z1bGxTY3JlZW5JbWFnZScsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9rZWVuc29mdC9GdWxsU2NyZWVuSW1hZ2UtQ29yZG92YS1QbHVnaW4nLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBGdWxsU2NyZWVuSW1hZ2UgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogT3BlbnMgYW4gaW1hZ2UgZnJvbSBhIFVSTCBvciBwYXRoXHJcbiAgICogQHBhcmFtIHVybCB7c3RyaW5nfSB1cmwgb3IgaW1hZ2UgcGF0aFxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBzaG93SW1hZ2VVUkwodXJsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogT3BlbnMgYW4gaW1hZ2UgZnJvbSBhIGJhc2U2NCBzdHJpbmdcclxuICAgKiBAcGFyYW0gYmFzZTY0U3RyaW5nIHtzdHJpbmd9IGJhc2U2NCBzdHJpbmdcclxuICAgKiBAcGFyYW0gbmFtZT8ge3N0cmluZ30gaW1hZ2UgbmFtZVxyXG4gICAqIEBwYXJhbSB0eXBlPyB7c3RyaW5nfSBpbWFnZSBleHRlbnNpb25cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXHJcbiAgc2hvd0ltYWdlQmFzZTY0KGJhc2U2NFN0cmluZzogc3RyaW5nLCBuYW1lPzogc3RyaW5nLCB0eXBlPzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19