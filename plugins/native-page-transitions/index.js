var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var NativePageTransitionsOriginal = /** @class */ (function (_super) {
    __extends(NativePageTransitionsOriginal, _super);
    function NativePageTransitionsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativePageTransitionsOriginal.prototype.slide = function (options) { return cordova(this, "slide", {}, arguments); };
    NativePageTransitionsOriginal.prototype.flip = function (options) { return cordova(this, "flip", {}, arguments); };
    NativePageTransitionsOriginal.prototype.fade = function (options) { return cordova(this, "fade", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.drawer = function (options) { return cordova(this, "drawer", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.curl = function (options) { return cordova(this, "curl", { "platforms": ["iOS"] }, arguments); };
    NativePageTransitionsOriginal.prototype.executePendingTransition = function () { return cordova(this, "executePendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.prototype.cancelPendingTransition = function () { return cordova(this, "cancelPendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.pluginName = "NativePageTransitions";
    NativePageTransitionsOriginal.plugin = "com.telerik.plugins.nativepagetransitions";
    NativePageTransitionsOriginal.pluginRef = "plugins.nativepagetransitions";
    NativePageTransitionsOriginal.repo = "https://github.com/Telerik-Verified-Plugins/NativePageTransitions";
    NativePageTransitionsOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return NativePageTransitionsOriginal;
}(IonicNativePlugin));
var NativePageTransitions = new NativePageTransitionsOriginal();
export { NativePageTransitions };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL25hdGl2ZS1wYWdlLXRyYW5zaXRpb25zL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXNFN0IseUNBQWlCOzs7O0lBTzFELHFDQUFLLGFBQUMsT0FBZ0M7SUFVdEMsb0NBQUksYUFBQyxPQUFnQztJQVVyQyxvQ0FBSSxhQUFDLE9BQWdDO0lBVXJDLHNDQUFNLGFBQUMsT0FBZ0M7SUFVdkMsb0NBQUksYUFBQyxPQUFnQztJQVNyQyx3REFBd0I7SUFTeEIsdURBQXVCOzs7Ozs7Z0NBeEl6QjtFQXVFMkMsaUJBQWlCO1NBQS9DLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zIHtcclxuICBkaXJlY3Rpb24/OiBzdHJpbmc7XHJcbiAgZHVyYXRpb24/OiBudW1iZXI7XHJcbiAgc2xvd2Rvd25mYWN0b3I/OiBudW1iZXI7XHJcbiAgc2xpZGVQaXhlbHM/OiBudW1iZXI7XHJcbiAgaW9zZGVsYXk/OiBudW1iZXI7XHJcbiAgYW5kcm9pZGRlbGF5PzogbnVtYmVyO1xyXG4gIHdpbnBob25lZGVsYXk/OiBudW1iZXI7XHJcbiAgZml4ZWRQaXhlbHNUb3A/OiBudW1iZXI7XHJcbiAgZml4ZWRQaXhlbHNCb3R0b20/OiBudW1iZXI7XHJcbiAgYWN0aW9uPzogc3RyaW5nO1xyXG4gIG9yaWdpbj86IHN0cmluZztcclxuICBocmVmPzogc3RyaW5nO1xyXG59XHJcblxyXG4vKipcclxuICogQG5hbWUgTmF0aXZlIFBhZ2UgVHJhbnNpdGlvbnNcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFRoZSBOYXRpdmUgUGFnZSBUcmFuc2l0aW9ucyBwbHVnaW4gdXNlcyBuYXRpdmUgaGFyZHdhcmUgYWNjZWxlcmF0aW9uIHRvIGFuaW1hdGUgeW91ciB0cmFuc2l0aW9ucyBiZXR3ZWVuIHZpZXdzLiBZb3UgaGF2ZSBjb21wbGV0ZSBjb250cm9sIG92ZXIgdGhlIHR5cGUgb2YgdHJhbnNpdGlvbiwgdGhlIGR1cmF0aW9uLCBhbmQgZGlyZWN0aW9uLlxyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBOYXRpdmVQYWdlVHJhbnNpdGlvbnMsIE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9uYXRpdmUtcGFnZS10cmFuc2l0aW9ucy9uZ3gnO1xyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdGl2ZVBhZ2VUcmFuc2l0aW9uczogTmF0aXZlUGFnZVRyYW5zaXRpb25zKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIC8vIGV4YW1wbGUgb2YgYWRkaW5nIGEgdHJhbnNpdGlvbiB3aGVuIGEgcGFnZS9tb2RhbCBjbG9zZXNcclxuICogaW9uVmlld1dpbGxMZWF2ZSgpIHtcclxuICpcclxuICogIGxldCBvcHRpb25zOiBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyA9IHtcclxuICogICAgIGRpcmVjdGlvbjogJ3VwJyxcclxuICogICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAqICAgICBzbG93ZG93bmZhY3RvcjogMyxcclxuICogICAgIHNsaWRlUGl4ZWxzOiAyMCxcclxuICogICAgIGlvc2RlbGF5OiAxMDAsXHJcbiAqICAgICBhbmRyb2lkZGVsYXk6IDE1MCxcclxuICogICAgIGZpeGVkUGl4ZWxzVG9wOiAwLFxyXG4gKiAgICAgZml4ZWRQaXhlbHNCb3R0b206IDYwXHJcbiAqICAgIH1cclxuICpcclxuICogIHRoaXMubmF0aXZlUGFnZVRyYW5zaXRpb25zLnNsaWRlKG9wdGlvbnMpXHJcbiAqICAgIC50aGVuKG9uU3VjY2VzcylcclxuICogICAgLmNhdGNoKG9uRXJyb3IpO1xyXG4gKlxyXG4gKiB9XHJcbiAqXHJcbiAqXHJcbiAqIC8vIGV4YW1wbGUgb2YgYWRkaW5nIGEgdHJhbnNpdGlvbiB3aGVuIHB1c2hpbmcgYSBuZXcgcGFnZVxyXG4gKiBvcGVuUGFnZShwYWdlOiBhbnkpIHtcclxuICpcclxuICogICB0aGlzLm5hdGl2ZVBhZ2VUcmFuc2l0aW9ucy5zbGlkZShvcHRpb25zKTtcclxuICogICB0aGlzLm5hdkN0cmwucHVzaChwYWdlKTtcclxuICpcclxuICogfVxyXG4gKlxyXG4gKiBgYGBcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdOYXRpdmVQYWdlVHJhbnNpdGlvbnMnLFxyXG4gIHBsdWdpbjogJ2NvbS50ZWxlcmlrLnBsdWdpbnMubmF0aXZlcGFnZXRyYW5zaXRpb25zJyxcclxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLm5hdGl2ZXBhZ2V0cmFuc2l0aW9ucycsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9UZWxlcmlrLVZlcmlmaWVkLVBsdWdpbnMvTmF0aXZlUGFnZVRyYW5zaXRpb25zJyxcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyBQaG9uZSA4J10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE5hdGl2ZVBhZ2VUcmFuc2l0aW9ucyBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcclxuICAvKipcclxuICAgKiBQZXJmb3JtIGEgc2xpZGUgYW5pbWF0aW9uXHJcbiAgICogQHBhcmFtIG9wdGlvbnMge05hdGl2ZVRyYW5zaXRpb25PcHRpb25zfSBPcHRpb25zIGZvciB0aGUgdHJhbnNpdGlvblxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNsaWRlKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gYSBmbGlwIGFuaW1hdGlvblxyXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBmbGlwKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gYSBmYWRlIGFuaW1hdGlvblxyXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10gfSlcclxuICBmYWRlKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gYSBzbGlkZSBhbmltYXRpb25cclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydpT1MnLCAnQW5kcm9pZCddIH0pXHJcbiAgZHJhd2VyKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gYSBzbGlkZSBhbmltYXRpb25cclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHBsYXRmb3JtczogWydpT1MnXSB9KVxyXG4gIGN1cmwob3B0aW9uczogTmF0aXZlVHJhbnNpdGlvbk9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXhlY3V0ZSBwZW5kaW5nIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBleGVjdXRlUGVuZGluZ1RyYW5zaXRpb24oKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENhbmNlbCBwZW5kaW5nIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBjYW5jZWxQZW5kaW5nVHJhbnNpdGlvbigpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=