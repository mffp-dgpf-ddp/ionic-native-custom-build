var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var AppodealOriginal = /** @class */ (function (_super) {
    __extends(AppodealOriginal, _super);
    function AppodealOriginal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // available types of advertisements
        _this.AD_TYPES = {
            INTERSTITIAL: 1,
            SKIPPABLE_VIDEO: 2,
            BANNER: 4,
            BANNER_BOTTOM: 8,
            BANNER_TOP: 16,
            REWARDED_VIDEO: 128,
            NON_SKIPPABLE_VIDEO: 256,
        };
        return _this;
    }
    AppodealOriginal.prototype.initialize = function (appKey, adType) { return cordova(this, "initialize", {}, arguments); };
    AppodealOriginal.prototype.isInitialized = function () { return cordova(this, "isInitialized", {}, arguments); };
    AppodealOriginal.prototype.show = function (adType) { return cordova(this, "show", {}, arguments); };
    AppodealOriginal.prototype.showWithPlacement = function (adType, placement) { return cordova(this, "showWithPlacement", {}, arguments); };
    AppodealOriginal.prototype.hide = function (adType) { return cordova(this, "hide", {}, arguments); };
    AppodealOriginal.prototype.canShow = function (adType) { return cordova(this, "canShow", {}, arguments); };
    AppodealOriginal.prototype.isLoaded = function (adType) { return cordova(this, "isLoaded", {}, arguments); };
    AppodealOriginal.prototype.isPrecache = function (adType) { return cordova(this, "isPrecache", {}, arguments); };
    AppodealOriginal.prototype.setAutoCache = function (adType, autoCache) { return cordova(this, "setAutoCache", {}, arguments); };
    AppodealOriginal.prototype.cache = function (adType) { return cordova(this, "cache", {}, arguments); };
    AppodealOriginal.prototype.setTriggerOnLoadedOnPrecache = function (set) { return cordova(this, "setTriggerOnLoadedOnPrecache", {}, arguments); };
    AppodealOriginal.prototype.setSmartBanners = function (enabled) { return cordova(this, "setSmartBanners", {}, arguments); };
    AppodealOriginal.prototype.setBannerBackground = function (enabled) { return cordova(this, "setBannerBackground", {}, arguments); };
    AppodealOriginal.prototype.setBannerAnimation = function (enabled) { return cordova(this, "setBannerAnimation", {}, arguments); };
    AppodealOriginal.prototype.set728x90Banners = function (value) { return cordova(this, "set728x90Banners", {}, arguments); };
    AppodealOriginal.prototype.setLogLevel = function (logging) { return cordova(this, "setLogLevel", {}, arguments); };
    AppodealOriginal.prototype.setTesting = function (testing) { return cordova(this, "setTesting", {}, arguments); };
    AppodealOriginal.prototype.resetUUID = function () { return cordova(this, "resetUUID", {}, arguments); };
    AppodealOriginal.prototype.getVersion = function () { return cordova(this, "getVersion", {}, arguments); };
    AppodealOriginal.prototype.disableNetwork = function (network, adType) { return cordova(this, "disableNetwork", {}, arguments); };
    AppodealOriginal.prototype.disableNetworkType = function (network, adType) { return cordova(this, "disableNetworkType", {}, arguments); };
    AppodealOriginal.prototype.disableLocationPermissionCheck = function () { return cordova(this, "disableLocationPermissionCheck", {}, arguments); };
    AppodealOriginal.prototype.disableWriteExternalStoragePermissionCheck = function () { return cordova(this, "disableWriteExternalStoragePermissionCheck", {}, arguments); };
    AppodealOriginal.prototype.enableInterstitialCallbacks = function (enabled) { return cordova(this, "enableInterstitialCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableSkippableVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableNonSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableNonSkippableVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableBannerCallbacks = function (enabled) { return cordova(this, "enableBannerCallbacks", {}, arguments); };
    AppodealOriginal.prototype.enableRewardedVideoCallbacks = function (enabled) { return cordova(this, "enableRewardedVideoCallbacks", {}, arguments); };
    AppodealOriginal.prototype.setCustomBooleanRule = function (name, value) { return cordova(this, "setCustomBooleanRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomIntegerRule = function (name, value) { return cordova(this, "setCustomIntegerRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomDoubleRule = function (name, value) { return cordova(this, "setCustomDoubleRule", {}, arguments); };
    AppodealOriginal.prototype.setCustomStringRule = function (name, value) { return cordova(this, "setCustomStringRule", {}, arguments); };
    AppodealOriginal.prototype.setUserId = function (id) { return cordova(this, "setUserId", {}, arguments); };
    AppodealOriginal.prototype.setEmail = function (email) { return cordova(this, "setEmail", {}, arguments); };
    AppodealOriginal.prototype.setBirthday = function (birthday) { return cordova(this, "setBirthday", {}, arguments); };
    AppodealOriginal.prototype.setAge = function (age) { return cordova(this, "setAge", {}, arguments); };
    AppodealOriginal.prototype.setGender = function (gender) { return cordova(this, "setGender", {}, arguments); };
    AppodealOriginal.prototype.setOccupation = function (occupation) { return cordova(this, "setOccupation", {}, arguments); };
    AppodealOriginal.prototype.setRelation = function (relation) { return cordova(this, "setRelation", {}, arguments); };
    AppodealOriginal.prototype.setSmoking = function (smoking) { return cordova(this, "setSmoking", {}, arguments); };
    AppodealOriginal.prototype.setAlcohol = function (alcohol) { return cordova(this, "setAlcohol", {}, arguments); };
    AppodealOriginal.prototype.setInterests = function (interests) { return cordova(this, "setInterests", {}, arguments); };
    AppodealOriginal.prototype.onInterstitialLoaded = function () { return cordova(this, "onInterstitialLoaded", { "eventObservable": true, "event": "onInterstitialLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialFailedToLoad = function () { return cordova(this, "onInterstitialFailedToLoad", { "eventObservable": true, "event": "onInterstitialFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialShown = function () { return cordova(this, "onInterstitialShown", { "eventObservable": true, "event": "onInterstitialShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialClicked = function () { return cordova(this, "onInterstitialClicked", { "eventObservable": true, "event": "onInterstitialClicked", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onInterstitialClosed = function () { return cordova(this, "onInterstitialClosed", { "eventObservable": true, "event": "onInterstitialClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoLoaded = function () { return cordova(this, "onSkippableVideoLoaded", { "eventObservable": true, "event": "onSkippableVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoFailedToLoad = function () { return cordova(this, "onSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoShown = function () { return cordova(this, "onSkippableVideoShown", { "eventObservable": true, "event": "onSkippableVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoFinished = function () { return cordova(this, "onSkippableVideoFinished", { "eventObservable": true, "event": "onSkippableVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onSkippableVideoClosed = function () { return cordova(this, "onSkippableVideoClosed", { "eventObservable": true, "event": "onSkippableVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoLoaded = function () { return cordova(this, "onRewardedVideoLoaded", { "eventObservable": true, "event": "onRewardedVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoFailedToLoad = function () { return cordova(this, "onRewardedVideoFailedToLoad", { "eventObservable": true, "event": "onRewardedVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoShown = function () { return cordova(this, "onRewardedVideoShown", { "eventObservable": true, "event": "onRewardedVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoFinished = function () { return cordova(this, "onRewardedVideoFinished", { "eventObservable": true, "event": "onRewardedVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onRewardedVideoClosed = function () { return cordova(this, "onRewardedVideoClosed", { "eventObservable": true, "event": "onRewardedVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoLoaded = function () { return cordova(this, "onNonSkippableVideoLoaded", { "eventObservable": true, "event": "onNonSkippableVideoLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoFailedToLoad = function () { return cordova(this, "onNonSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onNonSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoShown = function () { return cordova(this, "onNonSkippableVideoShown", { "eventObservable": true, "event": "onNonSkippableVideoShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoFinished = function () { return cordova(this, "onNonSkippableVideoFinished", { "eventObservable": true, "event": "onNonSkippableVideoFinished", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onNonSkippableVideoClosed = function () { return cordova(this, "onNonSkippableVideoClosed", { "eventObservable": true, "event": "onNonSkippableVideoClosed", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerClicked = function () { return cordova(this, "onBannerClicked", { "eventObservable": true, "event": "onBannerClicked", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerFailedToLoad = function () { return cordova(this, "onBannerFailedToLoad", { "eventObservable": true, "event": "onBannerFailedToLoad", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerLoaded = function () { return cordova(this, "onBannerLoaded", { "eventObservable": true, "event": "onBannerLoaded", "element": "document" }, arguments); };
    AppodealOriginal.prototype.onBannerShown = function () { return cordova(this, "onBannerShown", { "eventObservable": true, "event": "onBannerShown", "element": "document" }, arguments); };
    AppodealOriginal.prototype.getRewardParametersForPlacement = function (placement) { return cordova(this, "getRewardParametersForPlacement", {}, arguments); };
    AppodealOriginal.prototype.getRewardParameters = function () { return cordova(this, "getRewardParameters", {}, arguments); };
    AppodealOriginal.prototype.canShowWithPlacement = function (adType, placement) { return cordova(this, "canShowWithPlacement", {}, arguments); };
    AppodealOriginal.prototype.showTestScreen = function (value) { return cordova(this, "showTestScreen", { "platforms": ["Android"] }, arguments); };
    AppodealOriginal.prototype.muteVideosIfCallsMuted = function (value) { return cordova(this, "muteVideosIfCallsMuted", {}, arguments); };
    AppodealOriginal.prototype.setChildDirectedTreatment = function (value) { return cordova(this, "setChildDirectedTreatment", {}, arguments); };
    AppodealOriginal.pluginName = "Appodeal";
    AppodealOriginal.plugin = "https://github.com/appodeal/appodeal-cordova-plugin.git";
    AppodealOriginal.pluginRef = "Appodeal";
    AppodealOriginal.repo = "https://github.com/appodeal/appodeal-cordova-plugin";
    AppodealOriginal.platforms = ["iOS", "Android"];
    return AppodealOriginal;
}(IonicNativePlugin));
var Appodeal = new AppodealOriginal();
export { Appodeal };
//# sourceMappingURL=data:application/json;base64,