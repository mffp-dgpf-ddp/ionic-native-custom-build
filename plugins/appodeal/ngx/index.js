import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var Appodeal = /** @class */ (function (_super) {
    __extends(Appodeal, _super);
    function Appodeal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // available types of advertisements
        _this.AD_TYPES = {
            INTERSTITIAL: 1,
            SKIPPABLE_VIDEO: 2,
            BANNER: 4,
            BANNER_BOTTOM: 8,
            BANNER_TOP: 16,
            REWARDED_VIDEO: 128,
            NON_SKIPPABLE_VIDEO: 256,
        };
        return _this;
    }
    Appodeal.prototype.initialize = function (appKey, adType) { return cordova(this, "initialize", {}, arguments); };
    Appodeal.prototype.isInitialized = function () { return cordova(this, "isInitialized", {}, arguments); };
    Appodeal.prototype.show = function (adType) { return cordova(this, "show", {}, arguments); };
    Appodeal.prototype.showWithPlacement = function (adType, placement) { return cordova(this, "showWithPlacement", {}, arguments); };
    Appodeal.prototype.hide = function (adType) { return cordova(this, "hide", {}, arguments); };
    Appodeal.prototype.canShow = function (adType) { return cordova(this, "canShow", {}, arguments); };
    Appodeal.prototype.isLoaded = function (adType) { return cordova(this, "isLoaded", {}, arguments); };
    Appodeal.prototype.isPrecache = function (adType) { return cordova(this, "isPrecache", {}, arguments); };
    Appodeal.prototype.setAutoCache = function (adType, autoCache) { return cordova(this, "setAutoCache", {}, arguments); };
    Appodeal.prototype.cache = function (adType) { return cordova(this, "cache", {}, arguments); };
    Appodeal.prototype.setTriggerOnLoadedOnPrecache = function (set) { return cordova(this, "setTriggerOnLoadedOnPrecache", {}, arguments); };
    Appodeal.prototype.setSmartBanners = function (enabled) { return cordova(this, "setSmartBanners", {}, arguments); };
    Appodeal.prototype.setBannerBackground = function (enabled) { return cordova(this, "setBannerBackground", {}, arguments); };
    Appodeal.prototype.setBannerAnimation = function (enabled) { return cordova(this, "setBannerAnimation", {}, arguments); };
    Appodeal.prototype.set728x90Banners = function (value) { return cordova(this, "set728x90Banners", {}, arguments); };
    Appodeal.prototype.setLogLevel = function (logging) { return cordova(this, "setLogLevel", {}, arguments); };
    Appodeal.prototype.setTesting = function (testing) { return cordova(this, "setTesting", {}, arguments); };
    Appodeal.prototype.resetUUID = function () { return cordova(this, "resetUUID", {}, arguments); };
    Appodeal.prototype.getVersion = function () { return cordova(this, "getVersion", {}, arguments); };
    Appodeal.prototype.disableNetwork = function (network, adType) { return cordova(this, "disableNetwork", {}, arguments); };
    Appodeal.prototype.disableNetworkType = function (network, adType) { return cordova(this, "disableNetworkType", {}, arguments); };
    Appodeal.prototype.disableLocationPermissionCheck = function () { return cordova(this, "disableLocationPermissionCheck", {}, arguments); };
    Appodeal.prototype.disableWriteExternalStoragePermissionCheck = function () { return cordova(this, "disableWriteExternalStoragePermissionCheck", {}, arguments); };
    Appodeal.prototype.enableInterstitialCallbacks = function (enabled) { return cordova(this, "enableInterstitialCallbacks", {}, arguments); };
    Appodeal.prototype.enableSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableSkippableVideoCallbacks", {}, arguments); };
    Appodeal.prototype.enableNonSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableNonSkippableVideoCallbacks", {}, arguments); };
    Appodeal.prototype.enableBannerCallbacks = function (enabled) { return cordova(this, "enableBannerCallbacks", {}, arguments); };
    Appodeal.prototype.enableRewardedVideoCallbacks = function (enabled) { return cordova(this, "enableRewardedVideoCallbacks", {}, arguments); };
    Appodeal.prototype.setCustomBooleanRule = function (name, value) { return cordova(this, "setCustomBooleanRule", {}, arguments); };
    Appodeal.prototype.setCustomIntegerRule = function (name, value) { return cordova(this, "setCustomIntegerRule", {}, arguments); };
    Appodeal.prototype.setCustomDoubleRule = function (name, value) { return cordova(this, "setCustomDoubleRule", {}, arguments); };
    Appodeal.prototype.setCustomStringRule = function (name, value) { return cordova(this, "setCustomStringRule", {}, arguments); };
    Appodeal.prototype.setUserId = function (id) { return cordova(this, "setUserId", {}, arguments); };
    Appodeal.prototype.setEmail = function (email) { return cordova(this, "setEmail", {}, arguments); };
    Appodeal.prototype.setBirthday = function (birthday) { return cordova(this, "setBirthday", {}, arguments); };
    Appodeal.prototype.setAge = function (age) { return cordova(this, "setAge", {}, arguments); };
    Appodeal.prototype.setGender = function (gender) { return cordova(this, "setGender", {}, arguments); };
    Appodeal.prototype.setOccupation = function (occupation) { return cordova(this, "setOccupation", {}, arguments); };
    Appodeal.prototype.setRelation = function (relation) { return cordova(this, "setRelation", {}, arguments); };
    Appodeal.prototype.setSmoking = function (smoking) { return cordova(this, "setSmoking", {}, arguments); };
    Appodeal.prototype.setAlcohol = function (alcohol) { return cordova(this, "setAlcohol", {}, arguments); };
    Appodeal.prototype.setInterests = function (interests) { return cordova(this, "setInterests", {}, arguments); };
    Appodeal.prototype.onInterstitialLoaded = function () { return cordova(this, "onInterstitialLoaded", { "eventObservable": true, "event": "onInterstitialLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialFailedToLoad = function () { return cordova(this, "onInterstitialFailedToLoad", { "eventObservable": true, "event": "onInterstitialFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialShown = function () { return cordova(this, "onInterstitialShown", { "eventObservable": true, "event": "onInterstitialShown", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialClicked = function () { return cordova(this, "onInterstitialClicked", { "eventObservable": true, "event": "onInterstitialClicked", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialClosed = function () { return cordova(this, "onInterstitialClosed", { "eventObservable": true, "event": "onInterstitialClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoLoaded = function () { return cordova(this, "onSkippableVideoLoaded", { "eventObservable": true, "event": "onSkippableVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoFailedToLoad = function () { return cordova(this, "onSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoShown = function () { return cordova(this, "onSkippableVideoShown", { "eventObservable": true, "event": "onSkippableVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoFinished = function () { return cordova(this, "onSkippableVideoFinished", { "eventObservable": true, "event": "onSkippableVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoClosed = function () { return cordova(this, "onSkippableVideoClosed", { "eventObservable": true, "event": "onSkippableVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoLoaded = function () { return cordova(this, "onRewardedVideoLoaded", { "eventObservable": true, "event": "onRewardedVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoFailedToLoad = function () { return cordova(this, "onRewardedVideoFailedToLoad", { "eventObservable": true, "event": "onRewardedVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoShown = function () { return cordova(this, "onRewardedVideoShown", { "eventObservable": true, "event": "onRewardedVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoFinished = function () { return cordova(this, "onRewardedVideoFinished", { "eventObservable": true, "event": "onRewardedVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoClosed = function () { return cordova(this, "onRewardedVideoClosed", { "eventObservable": true, "event": "onRewardedVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoLoaded = function () { return cordova(this, "onNonSkippableVideoLoaded", { "eventObservable": true, "event": "onNonSkippableVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoFailedToLoad = function () { return cordova(this, "onNonSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onNonSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoShown = function () { return cordova(this, "onNonSkippableVideoShown", { "eventObservable": true, "event": "onNonSkippableVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoFinished = function () { return cordova(this, "onNonSkippableVideoFinished", { "eventObservable": true, "event": "onNonSkippableVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoClosed = function () { return cordova(this, "onNonSkippableVideoClosed", { "eventObservable": true, "event": "onNonSkippableVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerClicked = function () { return cordova(this, "onBannerClicked", { "eventObservable": true, "event": "onBannerClicked", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerFailedToLoad = function () { return cordova(this, "onBannerFailedToLoad", { "eventObservable": true, "event": "onBannerFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerLoaded = function () { return cordova(this, "onBannerLoaded", { "eventObservable": true, "event": "onBannerLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerShown = function () { return cordova(this, "onBannerShown", { "eventObservable": true, "event": "onBannerShown", "element": "document" }, arguments); };
    Appodeal.prototype.getRewardParametersForPlacement = function (placement) { return cordova(this, "getRewardParametersForPlacement", {}, arguments); };
    Appodeal.prototype.getRewardParameters = function () { return cordova(this, "getRewardParameters", {}, arguments); };
    Appodeal.prototype.canShowWithPlacement = function (adType, placement) { return cordova(this, "canShowWithPlacement", {}, arguments); };
    Appodeal.prototype.showTestScreen = function (value) { return cordova(this, "showTestScreen", { "platforms": ["Android"] }, arguments); };
    Appodeal.prototype.muteVideosIfCallsMuted = function (value) { return cordova(this, "muteVideosIfCallsMuted", {}, arguments); };
    Appodeal.prototype.setChildDirectedTreatment = function (value) { return cordova(this, "setChildDirectedTreatment", {}, arguments); };
    Appodeal.pluginName = "Appodeal";
    Appodeal.plugin = "https://github.com/appodeal/appodeal-cordova-plugin.git";
    Appodeal.pluginRef = "Appodeal";
    Appodeal.repo = "https://github.com/appodeal/appodeal-cordova-plugin";
    Appodeal.platforms = ["iOS", "Android"];
    Appodeal = __decorate([
        Injectable()
    ], Appodeal);
    return Appodeal;
}(IonicNativePlugin));
export { Appodeal };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FwcG9kZWFsL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0lBNEJKLDRCQUFpQjs7O1FBQzdDLG9DQUFvQztRQUMzQixjQUFRLEdBQUc7WUFDbEIsWUFBWSxFQUFFLENBQUM7WUFDZixlQUFlLEVBQUUsQ0FBQztZQUNsQixNQUFNLEVBQUUsQ0FBQztZQUNULGFBQWEsRUFBRSxDQUFDO1lBQ2hCLFVBQVUsRUFBRSxFQUFFO1lBQ2QsY0FBYyxFQUFFLEdBQUc7WUFDbkIsbUJBQW1CLEVBQUUsR0FBRztTQUN6QixDQUFDOzs7SUFRRiw2QkFBVSxhQUFDLE1BQWMsRUFBRSxNQUFjO0lBT3pDLGdDQUFhO0lBVWIsdUJBQUksYUFBQyxNQUFjO0lBV25CLG9DQUFpQixhQUFDLE1BQWMsRUFBRSxTQUFjO0lBU2hELHVCQUFJLGFBQUMsTUFBYztJQVFuQiwwQkFBTyxhQUFDLE1BQWM7SUFVdEIsMkJBQVEsYUFBQyxNQUFjO0lBVXZCLDZCQUFVLGFBQUMsTUFBYztJQVV6QiwrQkFBWSxhQUFDLE1BQWMsRUFBRSxTQUFjO0lBTzNDLHdCQUFLLGFBQUMsTUFBYztJQU9wQiwrQ0FBNEIsYUFBQyxHQUFZO0lBT3pDLGtDQUFlLGFBQUMsT0FBZ0I7SUFPaEMsc0NBQW1CLGFBQUMsT0FBZ0I7SUFPcEMscUNBQWtCLGFBQUMsT0FBZ0I7SUFPbkMsbUNBQWdCLGFBQUMsS0FBVTtJQU8zQiw4QkFBVyxhQUFDLE9BQWdCO0lBTzVCLDZCQUFVLGFBQUMsT0FBZ0I7SUFNM0IsNEJBQVM7SUFNVCw2QkFBVTtJQVVWLGlDQUFjLGFBQUMsT0FBZ0IsRUFBRSxNQUFlO0lBUWhELHFDQUFrQixhQUFDLE9BQWdCLEVBQUUsTUFBZTtJQU1wRCxpREFBOEI7SUFNOUIsNkRBQTBDO0lBTzFDLDhDQUEyQixhQUFDLE9BQWdCO0lBTzVDLGdEQUE2QixhQUFDLE9BQWdCO0lBTzlDLG1EQUFnQyxhQUFDLE9BQWdCO0lBT2pELHdDQUFxQixhQUFDLE9BQWdCO0lBT3RDLCtDQUE0QixhQUFDLE9BQWdCO0lBUTdDLHVDQUFvQixhQUFDLElBQVksRUFBRSxLQUFjO0lBUWpELHVDQUFvQixhQUFDLElBQVksRUFBRSxLQUFhO0lBUWhELHNDQUFtQixhQUFDLElBQVksRUFBRSxLQUFhO0lBUS9DLHNDQUFtQixhQUFDLElBQVksRUFBRSxLQUFhO0lBTy9DLDRCQUFTLGFBQUMsRUFBTztJQU9qQiwyQkFBUSxhQUFDLEtBQVU7SUFPbkIsOEJBQVcsYUFBQyxRQUFhO0lBT3pCLHlCQUFNLGFBQUMsR0FBUTtJQU9mLDRCQUFTLGFBQUMsTUFBVztJQU9yQixnQ0FBYSxhQUFDLFVBQWU7SUFPN0IsOEJBQVcsYUFBQyxRQUFhO0lBT3pCLDZCQUFVLGFBQUMsT0FBWTtJQU92Qiw2QkFBVSxhQUFDLE9BQVk7SUFPdkIsK0JBQVksYUFBQyxTQUFjO0lBTzNCLHVDQUFvQjtJQVNwQiw2Q0FBMEI7SUFTMUIsc0NBQW1CO0lBU25CLHdDQUFxQjtJQVNyQix1Q0FBb0I7SUFTcEIseUNBQXNCO0lBU3RCLCtDQUE0QjtJQVM1Qix3Q0FBcUI7SUFTckIsMkNBQXdCO0lBU3hCLHlDQUFzQjtJQVN0Qix3Q0FBcUI7SUFTckIsOENBQTJCO0lBUzNCLHVDQUFvQjtJQVNwQiwwQ0FBdUI7SUFTdkIsd0NBQXFCO0lBU3JCLDRDQUF5QjtJQVN6QixrREFBK0I7SUFTL0IsMkNBQXdCO0lBU3hCLDhDQUEyQjtJQVMzQiw0Q0FBeUI7SUFTekIsa0NBQWU7SUFTZix1Q0FBb0I7SUFTcEIsaUNBQWM7SUFTZCxnQ0FBYTtJQUtiLGtEQUErQixhQUFDLFNBQWlCO0lBS2pELHNDQUFtQjtJQUtuQix1Q0FBb0IsYUFBQyxNQUFjLEVBQUUsU0FBaUI7SUFPdEQsaUNBQWMsYUFBQyxLQUFVO0lBR3pCLHlDQUFzQixhQUFDLEtBQVU7SUFLakMsNENBQXlCLGFBQUMsS0FBYzs7Ozs7O0lBNWpCN0IsUUFBUTtRQURwQixVQUFVLEVBQUU7T0FDQSxRQUFRO21CQTlCckI7RUE4QjhCLGlCQUFpQjtTQUFsQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIEFwcG9kZWFsXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBQbHVnaW4gdG8gc2VydmUgYWRzIHRocm91Z2ggbmF0aXZlIEFwcG9kZWFsIFNES3NcclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgQXBwb2RlYWwgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FwcG9kZWFsL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBwb2RlYWw6IEFwcG9kZWFsKSB7XHJcbiAqXHJcbiAqICAgIGNvbnN0IGFwcEtleSA9ICc8eW91ciBhcHAga2V5Pic7XHJcbiAqICAgIGFwcG9kZWFsLmluaXRpYWxpemUoYXBwS2V5LCBhcHBvZGVhbC5BRF9UWVBFUy5SRVdBUkRFRF9WSURFTyk7XHJcbiAqICAgIGFwcG9kZWFsLnNob3coYXBwb2RlYWwuQURfVFlQRVMuUkVXQVJERURfVklERU8pO1xyXG4gKlxyXG4gKiB9XHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0FwcG9kZWFsJyxcclxuICBwbHVnaW46ICdodHRwczovL2dpdGh1Yi5jb20vYXBwb2RlYWwvYXBwb2RlYWwtY29yZG92YS1wbHVnaW4uZ2l0JyxcclxuICBwbHVnaW5SZWY6ICdBcHBvZGVhbCcsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9hcHBvZGVhbC9hcHBvZGVhbC1jb3Jkb3ZhLXBsdWdpbicsXHJcbiAgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEFwcG9kZWFsIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8vIGF2YWlsYWJsZSB0eXBlcyBvZiBhZHZlcnRpc2VtZW50c1xyXG4gIHJlYWRvbmx5IEFEX1RZUEVTID0ge1xyXG4gICAgSU5URVJTVElUSUFMOiAxLFxyXG4gICAgU0tJUFBBQkxFX1ZJREVPOiAyLFxyXG4gICAgQkFOTkVSOiA0LFxyXG4gICAgQkFOTkVSX0JPVFRPTTogOCxcclxuICAgIEJBTk5FUl9UT1A6IDE2LFxyXG4gICAgUkVXQVJERURfVklERU86IDEyOCxcclxuICAgIE5PTl9TS0lQUEFCTEVfVklERU86IDI1NixcclxuICB9O1xyXG5cclxuICAvKipcclxuICAgKiBpbml0aWFsaXplIEFwcG9kZWFsIFNES1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhcHBLZXlcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGluaXRpYWxpemUoYXBwS2V5OiBzdHJpbmcsIGFkVHlwZTogbnVtYmVyKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBjaGVjayBpZiBTREsgaGFzIGJlZW4gaW5pdGlhbGl6ZWRcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgaXNJbml0aWFsaXplZCgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogc2hvdyBhZCBvZiBzcGVjaWZpZWQgdHlwZVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhZFR5cGVcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2hvdyhhZFR5cGU6IG51bWJlcik6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBzaG93IGFkIG9mIHNwZWNpZmllZCB0eXBlIHdpdGggcGxhY2VtZW50IG9wdGlvbnNcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICogQHBhcmFtIHthbnl9IHBsYWNlbWVudFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzaG93V2l0aFBsYWNlbWVudChhZFR5cGU6IG51bWJlciwgcGxhY2VtZW50OiBhbnkpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogaGlkZSBhZCBvZiBzcGVjaWZpZWQgdHlwZVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBhZFR5cGVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgaGlkZShhZFR5cGU6IG51bWJlcik6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICogY29uZmlybSB1c2Ugb2YgYWRzIG9mIHNwZWNpZmllZCB0eXBlXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFkVHlwZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNhblNob3coYWRUeXBlOiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogY2hlY2sgaWYgYWQgb2Ygc3BlY2lmaWVkIHR5cGUgaGFzIGJlZW4gbG9hZGVkXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFkVHlwZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBpc0xvYWRlZChhZFR5cGU6IG51bWJlcik6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBjaGVjayBpZiBhZCBvZiBzcGVjaWZpZWRcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGlzUHJlY2FjaGUoYWRUeXBlOiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICogQHBhcmFtIGF1dG9DYWNoZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRBdXRvQ2FjaGUoYWRUeXBlOiBudW1iZXIsIGF1dG9DYWNoZTogYW55KTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBmb3JjZWZ1bGx5IGNhY2hlIGFuIGFkIGJ5IHR5cGVcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNhY2hlKGFkVHlwZTogbnVtYmVyKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2V0XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldFRyaWdnZXJPbkxvYWRlZE9uUHJlY2FjaGUoc2V0OiBib29sZWFuKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgb3IgZGlzYWJsZSBTbWFydCBCYW5uZXJzXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldFNtYXJ0QmFubmVycyhlbmFibGVkOiBib29sZWFuKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgb3IgZGlzYWJsZSBiYW5uZXIgYmFja2dyb3VuZHNcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGVuYWJsZWRcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0QmFubmVyQmFja2dyb3VuZChlbmFibGVkOiBib29sZWFuKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgb3IgZGlzYWJsZSBiYW5uZXIgYW5pbWF0aW9uc1xyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRCYW5uZXJBbmltYXRpb24oZW5hYmxlZDogYm9vbGVhbik6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICpcclxuICAgKiBAcGFyYW0gdmFsdWVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0NzI4eDkwQmFubmVycyh2YWx1ZTogYW55KTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgb3IgZGlzYWJsZSBsb2dnaW5nXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBsb2dnaW5nXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldExvZ0xldmVsKGxvZ2dpbmc6IGJvb2xlYW4pOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIGVuYWJsZSBvciBkaXNhYmxlIHRlc3RpbmcgbW9kZVxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdGVzdGluZ1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRUZXN0aW5nKHRlc3Rpbmc6IGJvb2xlYW4pOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHJlc2V0IGRldmljZSBJRFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICByZXNldFVVSUQoKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBnZXQgdmVyc2lvbiBvZiBBcHBkZWFsIFNES1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBnZXRWZXJzaW9uKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuZXR3b3JrXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGFkVHlwZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBkaXNhYmxlTmV0d29yayhuZXR3b3JrPzogc3RyaW5nLCBhZFR5cGU/OiBudW1iZXIpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5ldHdvcmtcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYWRUeXBlXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGRpc2FibGVOZXR3b3JrVHlwZShuZXR3b3JrPzogc3RyaW5nLCBhZFR5cGU/OiBudW1iZXIpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIGRpc2FibGUgTG9jYXRpb24gcGVybWlzc2lvbnMgZm9yIEFwcG9kZWFsIFNES1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBkaXNhYmxlTG9jYXRpb25QZXJtaXNzaW9uQ2hlY2soKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBkaXNhYmxlIFN0b3JhZ2UgcGVybWlzc2lvbnMgZm9yIEFwcG9kZWFsIFNES1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBkaXNhYmxlV3JpdGVFeHRlcm5hbFN0b3JhZ2VQZXJtaXNzaW9uQ2hlY2soKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGVuYWJsZUludGVyc3RpdGlhbENhbGxiYWNrcyhlbmFibGVkOiBib29sZWFuKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBlbmFibGUgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBlbmFibGVkXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGVuYWJsZVNraXBwYWJsZVZpZGVvQ2FsbGJhY2tzKGVuYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIGVuYWJsZSBldmVudCBsaXN0ZW5lcnNcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGVuYWJsZWRcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZW5hYmxlTm9uU2tpcHBhYmxlVmlkZW9DYWxsYmFja3MoZW5hYmxlZDogYm9vbGVhbik6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICogZW5hYmxlIGV2ZW50IGxpc3RlbmVyc1xyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBlbmFibGVCYW5uZXJDYWxsYmFja3MoZW5hYmxlZDogYm9vbGVhbik6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICogZW5hYmxlIGV2ZW50IGxpc3RlbmVyc1xyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBlbmFibGVSZXdhcmRlZFZpZGVvQ2FsbGJhY2tzKGVuYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBuYW1lIG9mIHJ1bGVcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZhbHVlXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldEN1c3RvbUJvb2xlYW5SdWxlKG5hbWU6IHN0cmluZywgdmFsdWU6IGJvb2xlYW4pOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBuYW1lIG9mIHJ1bGVcclxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0Q3VzdG9tSW50ZWdlclJ1bGUobmFtZTogc3RyaW5nLCB2YWx1ZTogbnVtYmVyKTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBzZXQgcnVsZSB3aXRoIGZsb2F0IHZhbHVlXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcclxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0Q3VzdG9tRG91YmxlUnVsZShuYW1lOiBzdHJpbmcsIHZhbHVlOiBudW1iZXIpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBydWxlIHdpdGggc3RyaW5nIHZhbHVlXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBuYW1lIG9mIHJ1bGVcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0Q3VzdG9tU3RyaW5nUnVsZShuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBJRCBwcmVmZXJlbmNlIGluIEFwcG9kZWFsIGZvciBjdXJyZW50IHVzZXJcclxuICAgKiBAcGFyYW0gaWRcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0VXNlcklkKGlkOiBhbnkpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBFbWFpbCBwcmVmZXJlbmNlIGluIEFwcG9kZWFsIGZvciBjdXJyZW50IHVzZXJcclxuICAgKiBAcGFyYW0gZW1haWxcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0RW1haWwoZW1haWw6IGFueSk6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICogc2V0IEJpcnRoZGF5IHByZWZlcmVuY2UgaW4gQXBwb2RlYWwgZm9yIGN1cnJlbnQgdXNlclxyXG4gICAqIEBwYXJhbSBiaXJ0aGRheVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRCaXJ0aGRheShiaXJ0aGRheTogYW55KTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBldCBBZ2UgcHJlZmVyZW5jZSBpbiBBcHBvZGVhbCBmb3IgY3VycmVudCB1c2VyXHJcbiAgICogQHBhcmFtIGFnZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRBZ2UoYWdlOiBhbnkpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBHZW5kZXIgcHJlZmVyZW5jZSBpbiBBcHBvZGVhbCBmb3IgY3VycmVudCB1c2VyXHJcbiAgICogQHBhcmFtIGdlbmRlclxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRHZW5kZXIoZ2VuZGVyOiBhbnkpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBPY2N1cGF0aW9uIHByZWZlcmVuY2UgaW4gQXBwb2RlYWwgZm9yIGN1cnJlbnQgdXNlclxyXG4gICAqIEBwYXJhbSBvY2N1cGF0aW9uXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldE9jY3VwYXRpb24ob2NjdXBhdGlvbjogYW55KTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBzZXQgUmVsYXRpb24gcHJlZmVyZW5jZSBpbiBBcHBvZGVhbCBmb3IgY3VycmVudCB1c2VyXHJcbiAgICogQHBhcmFtIHJlbGF0aW9uXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldFJlbGF0aW9uKHJlbGF0aW9uOiBhbnkpOiB2b2lkIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIHNldCBTbW9raW5nIHByZWZlcmVuY2UgaW4gQXBwb2RlYWwgZm9yIGN1cnJlbnQgdXNlclxyXG4gICAqIEBwYXJhbSBzbW9raW5nXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldFNtb2tpbmcoc21va2luZzogYW55KTogdm9pZCB7fVxyXG5cclxuICAvKipcclxuICAgKiBzZXQgQWxjb2hvbCBwcmVmZXJlbmNlIGluIEFwcG9kZWFsIGZvciBjdXJyZW50IHVzZXJcclxuICAgKiBAcGFyYW0gYWxjb2hvbFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzZXRBbGNvaG9sKGFsY29ob2w6IGFueSk6IHZvaWQge31cclxuXHJcbiAgLyoqXHJcbiAgICogc2V0IEludGVyZXN0cyBwcmVmZXJlbmNlIGluIEFwcG9kZWFsIGZvciBjdXJyZW50IHVzZXJcclxuICAgKiBAcGFyYW0gaW50ZXJlc3RzXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHNldEludGVyZXN0cyhpbnRlcmVzdHM6IGFueSk6IHZvaWQge31cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvbkludGVyc3RpdGlhbExvYWRlZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25JbnRlcnN0aXRpYWxMb2FkZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25JbnRlcnN0aXRpYWxGYWlsZWRUb0xvYWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uSW50ZXJzdGl0aWFsRmFpbGVkVG9Mb2FkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uSW50ZXJzdGl0aWFsU2hvd24nLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uSW50ZXJzdGl0aWFsU2hvd24oKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25JbnRlcnN0aXRpYWxDbGlja2VkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvbkludGVyc3RpdGlhbENsaWNrZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25JbnRlcnN0aXRpYWxDbG9zZWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uSW50ZXJzdGl0aWFsQ2xvc2VkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uU2tpcHBhYmxlVmlkZW9Mb2FkZWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uU2tpcHBhYmxlVmlkZW9Mb2FkZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25Ta2lwcGFibGVWaWRlb0ZhaWxlZFRvTG9hZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25Ta2lwcGFibGVWaWRlb0ZhaWxlZFRvTG9hZCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvblNraXBwYWJsZVZpZGVvU2hvd24nLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uU2tpcHBhYmxlVmlkZW9TaG93bigpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvblNraXBwYWJsZVZpZGVvRmluaXNoZWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uU2tpcHBhYmxlVmlkZW9GaW5pc2hlZCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvblNraXBwYWJsZVZpZGVvQ2xvc2VkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvblNraXBwYWJsZVZpZGVvQ2xvc2VkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uUmV3YXJkZWRWaWRlb0xvYWRlZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25SZXdhcmRlZFZpZGVvTG9hZGVkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uUmV3YXJkZWRWaWRlb0ZhaWxlZFRvTG9hZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25SZXdhcmRlZFZpZGVvRmFpbGVkVG9Mb2FkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uUmV3YXJkZWRWaWRlb1Nob3duJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvblJld2FyZGVkVmlkZW9TaG93bigpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvblJld2FyZGVkVmlkZW9GaW5pc2hlZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25SZXdhcmRlZFZpZGVvRmluaXNoZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25SZXdhcmRlZFZpZGVvQ2xvc2VkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvblJld2FyZGVkVmlkZW9DbG9zZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25Ob25Ta2lwcGFibGVWaWRlb0xvYWRlZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25Ob25Ta2lwcGFibGVWaWRlb0xvYWRlZCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvbk5vblNraXBwYWJsZVZpZGVvRmFpbGVkVG9Mb2FkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvbk5vblNraXBwYWJsZVZpZGVvRmFpbGVkVG9Mb2FkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uTm9uU2tpcHBhYmxlVmlkZW9TaG93bicsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25Ob25Ta2lwcGFibGVWaWRlb1Nob3duKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uTm9uU2tpcHBhYmxlVmlkZW9GaW5pc2hlZCcsXHJcbiAgICBlbGVtZW50OiAnZG9jdW1lbnQnLFxyXG4gIH0pXHJcbiAgb25Ob25Ta2lwcGFibGVWaWRlb0ZpbmlzaGVkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uTm9uU2tpcHBhYmxlVmlkZW9DbG9zZWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uTm9uU2tpcHBhYmxlVmlkZW9DbG9zZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25CYW5uZXJDbGlja2VkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvbkJhbm5lckNsaWNrZWQoKTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGV2ZW50T2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGV2ZW50OiAnb25CYW5uZXJGYWlsZWRUb0xvYWQnLFxyXG4gICAgZWxlbWVudDogJ2RvY3VtZW50JyxcclxuICB9KVxyXG4gIG9uQmFubmVyRmFpbGVkVG9Mb2FkKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBldmVudE9ic2VydmFibGU6IHRydWUsXHJcbiAgICBldmVudDogJ29uQmFubmVyTG9hZGVkJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvbkJhbm5lckxvYWRlZCgpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgZXZlbnRPYnNlcnZhYmxlOiB0cnVlLFxyXG4gICAgZXZlbnQ6ICdvbkJhbm5lclNob3duJyxcclxuICAgIGVsZW1lbnQ6ICdkb2N1bWVudCcsXHJcbiAgfSlcclxuICBvbkJhbm5lclNob3duKCk6IE9ic2VydmFibGU8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0UmV3YXJkUGFyYW1ldGVyc0ZvclBsYWNlbWVudChwbGFjZW1lbnQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0UmV3YXJkUGFyYW1ldGVycygpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNhblNob3dXaXRoUGxhY2VtZW50KGFkVHlwZTogc3RyaW5nLCBwbGFjZW1lbnQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSh7XHJcbiAgICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxyXG4gIH0pXHJcbiAgc2hvd1Rlc3RTY3JlZW4odmFsdWU6IGFueSk6IHZvaWQge31cclxuXHJcbiAgQENvcmRvdmEoKVxyXG4gIG11dGVWaWRlb3NJZkNhbGxzTXV0ZWQodmFsdWU6IGFueSk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0Q2hpbGREaXJlY3RlZFRyZWF0bWVudCh2YWx1ZTogYm9vbGVhbik6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiJdfQ==