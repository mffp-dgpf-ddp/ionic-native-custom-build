var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var SQLitePorterOriginal = /** @class */ (function (_super) {
    __extends(SQLitePorterOriginal, _super);
    function SQLitePorterOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SQLitePorterOriginal.prototype.importSqlToDb = function (db, sql) { return cordova(this, "importSqlToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.exportDbToSql = function (db) { return cordova(this, "exportDbToSql", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.importJsonToDb = function (db, json) { return cordova(this, "importJsonToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.exportDbToJson = function (db) { return cordova(this, "exportDbToJson", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.prototype.wipeDb = function (db) { return cordova(this, "wipeDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorterOriginal.pluginName = "SQLitePorter";
    SQLitePorterOriginal.plugin = "uk.co.workingedge.cordova.plugin.sqliteporter";
    SQLitePorterOriginal.pluginRef = "cordova.plugins.sqlitePorter";
    SQLitePorterOriginal.repo = "https://github.com/dpa99c/cordova-sqlite-porter";
    SQLitePorterOriginal.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "iOS", "Tizen", "Windows", "Windows Phone"];
    return SQLitePorterOriginal;
}(IonicNativePlugin));
var SQLitePorter = new SQLitePorterOriginal();
export { SQLitePorter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3NxbGl0ZS1wb3J0ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBZ0R0QyxnQ0FBaUI7Ozs7SUFZakQsb0NBQWEsYUFBQyxFQUFPLEVBQUUsR0FBVztJQWNsQyxvQ0FBYSxhQUFDLEVBQU87SUFlckIscUNBQWMsYUFBQyxFQUFPLEVBQUUsSUFBUztJQWNqQyxxQ0FBYyxhQUFDLEVBQU87SUFjdEIsNkJBQU0sYUFBQyxFQUFPOzs7Ozs7dUJBckhoQjtFQWdEa0MsaUJBQWlCO1NBQXRDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIFNRTGl0ZSBQb3J0ZXJcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFRoaXMgQ29yZG92YS9QaG9uZWdhcCBwbHVnaW4gY2FuIGJlIHVzZWQgdG8gaW1wb3J0L2V4cG9ydCB0by9mcm9tIGEgU1FMaXRlIGRhdGFiYXNlIHVzaW5nIGVpdGhlciBTUUwgb3IgSlNPTi5cclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgU1FMaXRlUG9ydGVyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zcWxpdGUtcG9ydGVyL25neCc7XHJcbiAqXHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc3FsaXRlUG9ydGVyOiBTUUxpdGVQb3J0ZXIpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogbGV0IGRiID0gd2luZG93Lm9wZW5EYXRhYmFzZSgnVGVzdCcsICcxLjAnLCAnVGVzdERCJywgMSAqIDEwMjQpO1xyXG4gKiAvLyBvciB3ZSBjYW4gdXNlIFNRTGl0ZSBwbHVnaW5cclxuICogLy8gd2Ugd2lsbCBhc3N1bWUgdGhhdCB3ZSBpbmplY3RlZCBTUUxpdGUgaW50byB0aGlzIGNvbXBvbmVudCBhcyBzcWxpdGVcclxuICogdGhpcy5zcWxpdGUuY3JlYXRlKHtcclxuICogICBuYW1lOiAnZGF0YS5kYicsXHJcbiAqICAgbG9jYXRpb246ICdkZWZhdWx0J1xyXG4gKiB9KVxyXG4gKiAgIC50aGVuKChkYjogYW55KSA9PiB7XHJcbiAqICAgICBsZXQgZGJJbnN0YW5jZSA9IGRiLl9vYmplY3RJbnN0YW5jZTtcclxuICogICAgIC8vIHdlIGNhbiBwYXNzIGRiLl9vYmplY3RJbnN0YW5jZSBhcyB0aGUgZGF0YWJhc2Ugb3B0aW9uIGluIGFsbCBTUUxpdGVQb3J0ZXIgbWV0aG9kc1xyXG4gKiAgIH0pO1xyXG4gKlxyXG4gKlxyXG4gKiBsZXQgc3FsID0gJ0NSRUFURSBUQUJMRSBBcnRpc3QgKFtJZF0gUFJJTUFSWSBLRVksIFtUaXRsZV0pOycgK1xyXG4gKiAgICAgICAgICAgICdJTlNFUlQgSU5UTyBBcnRpc3QoSWQsVGl0bGUpIFZBTFVFUyAoXCIxXCIsXCJGcmVkXCIpOyc7XHJcbiAqXHJcbiAqIHRoaXMuc3FsaXRlUG9ydGVyLmltcG9ydFNxbFRvRGIoZGIsIHNxbClcclxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnSW1wb3J0ZWQnKSlcclxuICogICAuY2F0Y2goZSA9PiBjb25zb2xlLmVycm9yKGUpKTtcclxuICpcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnU1FMaXRlUG9ydGVyJyxcclxuICBwbHVnaW46ICd1ay5jby53b3JraW5nZWRnZS5jb3Jkb3ZhLnBsdWdpbi5zcWxpdGVwb3J0ZXInLFxyXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5zcWxpdGVQb3J0ZXInLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZHBhOTljL2NvcmRvdmEtc3FsaXRlLXBvcnRlcicsXHJcbiAgcGxhdGZvcm1zOiBbJ0FtYXpvbiBGaXJlIE9TJywgJ0FuZHJvaWQnLCAnQmxhY2tCZXJyeSAxMCcsICdCcm93c2VyJywgJ2lPUycsICdUaXplbicsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUnXSxcclxufSlcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgU1FMaXRlUG9ydGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIEV4ZWN1dGVzIGEgc2V0IG9mIFNRTCBzdGF0ZW1lbnRzIGFnYWluc3QgdGhlIGRlZmluZWQgZGF0YWJhc2UuIENhbiBiZSB1c2VkIHRvIGltcG9ydCBkYXRhIGRlZmluZWQgaW4gdGhlIFNRTCBzdGF0ZW1lbnRzIGludG8gdGhlIGRhdGFiYXNlLCBhbmQgbWF5IGFkZGl0aW9uYWxseSBpbmNsdWRlIGNvbW1hbmRzIHRvIGNyZWF0ZSB0aGUgdGFibGUgc3RydWN0dXJlLlxyXG4gICAqIEBwYXJhbSBkYiB7T2JqZWN0fSBEYXRhYmFzZSBvYmplY3RcclxuICAgKiBAcGFyYW0gc3FsIHtzdHJpbmd9IFNRTCBzdGF0ZW1lbnRzIHRvIGV4ZWN1dGUgYWdhaW5zdCB0aGUgZGF0YWJhc2VcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXHJcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXHJcbiAgICBlcnJvck5hbWU6ICdlcnJvckZuJyxcclxuICB9KVxyXG4gIGltcG9ydFNxbFRvRGIoZGI6IGFueSwgc3FsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXhwb3J0cyBhIFNRTGl0ZSBEQiBhcyBhIHNldCBvZiBTUUwgc3RhdGVtZW50cy5cclxuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxyXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxyXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbicsXHJcbiAgfSlcclxuICBleHBvcnREYlRvU3FsKGRiOiBhbnkpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29udmVydHMgdGFibGUgc3RydWN0dXJlIGFuZC9vciByb3cgZGF0YSBjb250YWluZWQgd2l0aGluIGEgSlNPTiBzdHJ1Y3R1cmUgaW50byBTUUwgc3RhdGVtZW50cyB0aGF0IGNhbiBiZSBleGVjdXRlZCBhZ2FpbnN0IGEgU1FMaXRlIGRhdGFiYXNlLiBDYW4gYmUgdXNlZCB0byBpbXBvcnQgZGF0YSBpbnRvIHRoZSBkYXRhYmFzZSBhbmQvb3IgY3JlYXRlIHRoZSB0YWJsZSBzdHJ1Y3R1cmUuXHJcbiAgICogQHBhcmFtIGRiIHtPYmplY3R9IERhdGFiYXNlIG9iamVjdFxyXG4gICAqIEBwYXJhbSBqc29uIHtPYmplY3R8c3RyaW5nfSBKU09OIHN0cnVjdHVyZSBjb250YWluaW5nIHJvdyBkYXRhIGFuZC9vciB0YWJsZSBzdHJ1Y3R1cmUgYXMgZWl0aGVyIGEgSlNPTiBvYmplY3Qgb3Igc3RyaW5nXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxyXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxyXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbicsXHJcbiAgfSlcclxuICBpbXBvcnRKc29uVG9EYihkYjogYW55LCBqc29uOiBhbnkpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXhwb3J0cyBhIFNRTGl0ZSBEQiBhcyBhIEpTT04gc3RydWN0dXJlXHJcbiAgICogQHBhcmFtIGRiIHtPYmplY3R9IERhdGFiYXNlIG9iamVjdFxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7XHJcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcclxuICAgIHN1Y2Nlc3NOYW1lOiAnc3VjY2Vzc0ZuJyxcclxuICAgIGVycm9yTmFtZTogJ2Vycm9yRm4nLFxyXG4gIH0pXHJcbiAgZXhwb3J0RGJUb0pzb24oZGI6IGFueSk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBXaXBlcyBhbGwgZGF0YSBmcm9tIGEgZGF0YWJhc2UgYnkgZHJvcHBpbmcgYWxsIGV4aXN0aW5nIHRhYmxlc1xyXG4gICAqIEBwYXJhbSBkYiB7T2JqZWN0fSBEYXRhYmFzZSBvYmplY3RcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXHJcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXHJcbiAgICBlcnJvck5hbWU6ICdlcnJvckZuJyxcclxuICB9KVxyXG4gIHdpcGVEYihkYjogYW55KTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19