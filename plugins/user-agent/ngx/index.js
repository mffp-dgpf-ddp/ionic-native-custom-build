import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var UserAgent = /** @class */ (function (_super) {
    __extends(UserAgent, _super);
    function UserAgent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserAgent.prototype.set = function (userAgent) { return cordova(this, "set", {}, arguments); };
    UserAgent.prototype.get = function () { return cordova(this, "get", {}, arguments); };
    UserAgent.prototype.reset = function () { return cordova(this, "reset", {}, arguments); };
    UserAgent.pluginName = "UserAgent";
    UserAgent.plugin = "cordova-plugin-useragent";
    UserAgent.pluginRef = "UserAgent";
    UserAgent.repo = "https://github.com/danielsogl/cordova-plugin-useragent";
    UserAgent.platforms = ["Android", "iOS"];
    UserAgent = __decorate([
        Injectable()
    ], UserAgent);
    return UserAgent;
}(IonicNativePlugin));
export { UserAgent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3VzZXItYWdlbnQvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBeUN6Qyw2QkFBaUI7Ozs7SUFPOUMsdUJBQUcsYUFBQyxTQUFpQjtJQVNyQix1QkFBRztJQVNILHlCQUFLOzs7Ozs7SUF6Qk0sU0FBUztRQURyQixVQUFVLEVBQUU7T0FDQSxTQUFTO29CQTFDdEI7RUEwQytCLGlCQUFpQjtTQUFuQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBAbmFtZSBVc2VyIEFnZW50XHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGUgVXNlckFnZW50IHBsdWdpbiBwcm92aWRlcyBmdW5jdGlvbnMgdG8gc2V0IHRoZSBIVFRQICB1c2VyLWFnZW50IGhlYWRlci4gRm9yIG1vcmUgaW5mbyBhYm91dCBVc2VyLUFnZW50cywgcGxlYXNlIFtzZWUgdGhlIEhUVFAgVXNlci1BZ2VudCBkb2NzXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvVXNlci1BZ2VudCkuXHJcbiAqXHJcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS11c2VyYWdlbnRgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbVXNlci1BZ2VudCBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL0xvdWlzVC9jb3Jkb3ZhLXVzZXJhZ2VudCkuXHJcbiAqXHJcbiAqIEB1c2FnZVxyXG4gKiBgYGB0eXBlc2NyaXB0XHJcbiAqIGltcG9ydCB7IFVzZXJBZ2VudCB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdXNlci1hZ2VudC9uZ3gnO1xyXG4gKlxyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHVzZXJBZ2VudDogVXNlckFnZW50KSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIHRoaXMudXNlckFnZW50LnNldCgnTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTEuMC4yNzA0LjEwMyBTYWZhcmkvNTM3LjM2JylcclxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXHJcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqXHJcbiAqICogdGhpcy51c2VyQWdlbnQuZ2V0KClcclxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXHJcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqXHJcbiAqICogdGhpcy51c2VyQWdlbnQucmVzZXQoKVxyXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcclxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuICpcclxuICogYGBgXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnVXNlckFnZW50JyxcclxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi11c2VyYWdlbnQnLFxyXG4gIHBsdWdpblJlZjogJ1VzZXJBZ2VudCcsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9kYW5pZWxzb2dsL2NvcmRvdmEtcGx1Z2luLXVzZXJhZ2VudCcsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFVzZXJBZ2VudCBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcclxuICAvKipcclxuICAgKiBDaGFuZ2VzIHRoZSBjdXJyZW50IHVzZXItYWdlbnQgdG8gdGhlIG9uZSBzZW50IGJ5IGFyZ3VtZW50LlxyXG4gICAqIEBwYXJhbSB1c2VyQWdlbnQge3N0cmluZ30gVXNlci1BZ2VudFxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSB1c2VyLWFnZW50IGNoYW5nZXNcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2V0KHVzZXJBZ2VudDogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJldHVybnMgdGhlIGN1cnJlbnQgdXNlci1hZ2VudCBzdHJpbmcuXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIHVzZXItYWdlbnQgaXMgcmV0dXJuZWRcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0KCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXRzIHRoZSB1c2VyLWFnZW50IGJhY2sgdG8gZGVmYXVsdFxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSB1c2VyLWFnZW50IHJlc2V0c1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICByZXNldCgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=