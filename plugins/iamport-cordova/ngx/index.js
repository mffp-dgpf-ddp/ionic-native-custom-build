import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var IamportCordova = /** @class */ (function (_super) {
    __extends(IamportCordova, _super);
    function IamportCordova() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IamportCordova.prototype.payment = function (paymentObject) { return cordova(this, "payment", {}, arguments); };
    IamportCordova.prototype.certification = function (certificationObject) { return cordova(this, "certification", {}, arguments); };
    IamportCordova.pluginName = "IamportCordova";
    IamportCordova.plugin = "iamport-cordova";
    IamportCordova.pluginRef = "cordova.plugins.IamportCordova";
    IamportCordova.repo = "https://github.com/iamport/iamport-cordova";
    IamportCordova.platforms = ["ios", "android"];
    IamportCordova = __decorate([
        Injectable()
    ], IamportCordova);
    return IamportCordova;
}(IonicNativePlugin));
export { IamportCordova };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2lhbXBvcnQtY29yZG92YS9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUEwRnBDLGtDQUFpQjs7OztJQU9uRCxnQ0FBTyxhQUFDLGFBQTRCO0lBVXBDLHNDQUFhLGFBQUMsbUJBQXdDOzs7Ozs7SUFqQjNDLGNBQWM7UUFEMUIsVUFBVSxFQUFFO09BQ0EsY0FBYzt5QkEzRjNCO0VBMkZvQyxpQkFBaUI7U0FBeEMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGx1Z2luLCBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcblxyXG5kZWNsYXJlIGNvbnN0IGNvcmRvdmE6IENvcmRvdmEgJiB7IHBsdWdpbnM6IGFueSB9O1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50T2JqZWN0IHtcclxuICB0aXRsZT86IFRpdGxlRGF0YTsgLy8gd2VidmlldyB0aXRsZSBkYXRhXHJcbiAgdXNlckNvZGU6IHN0cmluZzsgLy8gdXNlciBpZGVudGlmaWNhdGlvbiBjb2RlXHJcbiAgZGF0YTogUGF5bWVudERhdGE7IC8vIHBheW1lbnQgZGF0YVxyXG4gIGNhbGxiYWNrOiBhbnk7IC8vIGNhbGxiYWNrIGZ1bmN0aW9uIGFmdGVyIHBheW1lbnRcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDZXJ0aWZpY2F0aW9uT2JqZWN0IHtcclxuICB0aXRsZT86IFRpdGxlRGF0YTsgLy8gd2VidmlldyB0aXRsZSBkYXRhXHJcbiAgdXNlckNvZGU6IHN0cmluZzsgLy8gdXNlciBpZGVudGlmaWNhdGlvbiBjb2RlXHJcbiAgZGF0YTogQ2VydGlmaWNhdGlvbkRhdGE7IC8vIGNlcnRpZmljYXRpb24gZGF0YVxyXG4gIGNhbGxiYWNrOiBhbnk7IC8vIGNhbGxiYWNrIGZ1bmN0aW9uIGFmdGVyIGNlcnRpZmljYXRpb25cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUaXRsZURhdGEge1xyXG4gIG5hbWU/OiBzdHJpbmc7IC8vIHdlYnZpZXcgdGl0bGUgbmFtZVxyXG4gIGNvbG9yPzogc3RyaW5nOyAvLyB3ZWJ2aWV3IHRpdGxlIGJhY2tncm91bmQgY29sb3JcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50RGF0YSB7XHJcbiAgcGc/OiBzdHJpbmc7IC8vIHBheW1lbnQgZ2F0ZXdheSB0eXBlXHJcbiAgcGF5X21ldGhvZD86IHN0cmluZzsgLy8gcGF5bWVudCBtZXRob2RcclxuICBuYW1lOiBzdHJpbmc7IC8vIG5hbWUgb2Ygb3JkZXJcclxuICBtZXJjaGFudF91aWQ/OiBzdHJpbmc7IC8vIHVuaXF1ZSBtZXJjaGFudCBpZFxyXG4gIGFtb3VudDogc3RyaW5nOyAvLyBwYXltZW50IGFtb3VudFxyXG4gIGJ1eWVyX25hbWU/OiBzdHJpbmc7IC8vIGJ1eWVyIG5hbWVcclxuICBidXllcl90ZWw/OiBzdHJpbmc7IC8vIGJ1eWVyIGNvbnRhY3RcclxuICBidXllcl9lbWFpbD86IHN0cmluZzsgLy8gYnV5ZXIgZW1haWwgYWRkcmVzc1xyXG4gIGJ1eWVyX2FkZHI/OiBzdHJpbmc7IC8vIGJ1eWVyIGFkZHJlc3NcclxuICBidXllcl9wb3N0Y29kZT86IHN0cmluZzsgLy8gYnV5ZXIgcG9zdGNvZGVcclxuICBhcHBfc2NoZW1lOiBzdHJpbmc7IC8vIGN1c3RvbSBhcHAgdXJsIHNjaGVtZVxyXG4gIGN1c3RvbV9kYXRhPzogYW55OyAvLyBjdXN0b20gZGF0YVxyXG4gIG5vdGljZV91cmw/OiBzdHJpbmc7IC8vIG5vdGlmaWNhdGlvbiB1cmxcclxuICBlc2Nyb3c/OiBib29sZWFuOyAvLyB3aGV0aGVyIHRoZSB0eXBlIG9mIHRoaXMgb3JkZXIgaXMgZXNjcm93XHJcbiAgZGlnaXRhbD86IGJvb2xlYW47IC8vIHdoZXRoZXIgdGhpcyBvcmRlciBpcyBmb3IgcmVhbCBwcm9kdWN0cyBvciBjb250ZW50c1xyXG4gIGRpc3BsYXk/OiB7XHJcbiAgICBjYXJkX3F1b3RhPzogbnVtYmVyW107IC8vIGNyZWRpdCBjYXJkIGluc3RhbGxtZW50IHNldHRpbmcgdmFsdWVcclxuICB9O1xyXG4gIGN1cnJlbmN5Pzogc3RyaW5nOyAvLyBwYXltZW50IGN1cnJlbmN5XHJcbiAgY3VzdG9tZXJfdWlkPzogc3RyaW5nOyAvLyB1bmlxdWUgY3VzdG9tZXIgaWQgZm9yIHN1YnNjcmlwdGlvbiBwYXltZW50c1xyXG4gIHRheF9mcmVlPzogc3RyaW5nOyAvLyB0YXggYW1vdW50XHJcbiAgbGFuZ3VhZ2U/OiBzdHJpbmc7IC8vIGxhbmd1YWdlIHR5cGVcclxuICB2YmFua19kdWU/OiBzdHJpbmc7IC8vIHZiYW5rIGR1ZSBkYXRlXHJcbiAgYml6X251bT86IHN0cmluZzsgLy8gYnVzaW5lc3MgbnVtYmVyXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2VydGlmaWNhdGlvbkRhdGEge1xyXG4gIGNvbXBhbnk/OiBzdHJpbmc7IC8vIGNvbXBhbnkgbmFtZVxyXG4gIHBob25lPzogc3RyaW5nOyAvLyBjZWxsIHBob25lIG51bWJlclxyXG4gIG5hbWU/OiBzdHJpbmc7IC8vIG5hbWVcclxuICBjYXJyaWVyPzogc3RyaW5nOyAvLyBjYXJyaWVyIGNvZGVcclxuICBiaXJ0aD86IHN0cmluZzsgLy8gYmlydGggZGF0ZVxyXG4gIG1lcmNoYW50X3VpZD86IHN0cmluZzsgLy8gdW5pcXVlIG1lcmNoYW50IGlkXHJcbiAgbWluX2FnZT86IHN0cmluZzsgLy8gbWluaW11bSBhZ2UgdG8gYWxsb3cgY2VydGlmaWNhdGlvblxyXG4gIHBvcHVwPzogYm9vbGVhbjsgLy8gd2hldGhlciB0aGUgd2VidmlldyBpcyBwb3B1cFxyXG59XHJcblxyXG4vKipcclxuICogQG5hbWUgSWFtcG9ydCBDb3Jkb3ZhXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGlzIHBsdWdpbiBkb2VzIHNvbWV0aGluZ1xyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBJYW1wb3J0Q29yZG92YSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvaWFtcG9ydC1jb3Jkb3ZhL25neCc7XHJcbiAqXHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaWFtcG9ydENvcmRvdmE6IElhbXBvcnRDb3Jkb3ZhKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIHRoaXMuaWFtcG9ydENvcmRvdmEuZnVuY3Rpb25OYW1lKCdIZWxsbycsIDEyMylcclxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXHJcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0lhbXBvcnRDb3Jkb3ZhJyxcclxuICBwbHVnaW46ICdpYW1wb3J0LWNvcmRvdmEnLFxyXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5JYW1wb3J0Q29yZG92YScsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9pYW1wb3J0L2lhbXBvcnQtY29yZG92YScsXHJcbiAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIElhbXBvcnRDb3Jkb3ZhIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgZnVuY3Rpb24gaXMgdG8gbG9hZCBhIHdlYnZpZXcgb2YgYSBwYXltZW50IGdhdGV3YXkgdG8gcGF5IGZvciBzb21ldGhpbmdcclxuICAgKiBAcGFyYW0gcGF5bWVudE9iamVjdCB7UGF5bWVudE9iamVjdH0gUGF5bWVudCBkYXRhIHRvIHNldCB0aGUgcGF5bWVudCB3ZWJ2aWV3XHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBBIGNhbGxiYWNrIGZ1bmN0aW9uIG9mIHRoZSBwYXltZW50IGRhdGEgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHdlYnZpZXcgaXMgY2xvc2VkXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHBheW1lbnQocGF5bWVudE9iamVjdDogUGF5bWVudE9iamVjdCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm4gY29yZG92YS5wbHVnaW5zLklhbXBvcnRDb3Jkb3ZhLnBheW1lbnQocGF5bWVudE9iamVjdCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUaGlzIGZ1bmN0aW9uIGlzIHRvIGxvYWQgYSB3ZWJ2aWV3IGZvciBpZGVudGlmaWNhdGlvbiB3aXRoIGNhcnJpZXIgdHlwZShsaWtlIFZlcml6b24pLCBuYW1lIGFuZCBwaG9uZSBudW1iZXJcclxuICAgKiBAcGFyYW0gY2VydGlmaWNhdGlvbk9iamVjdCB7Q2VydGlmaWNhdGlvbk9iamVjdH0gQ2VydGlmaWNhdGlvbiBkYXRhIHRvIHNldCB0aGUgY2VydGlmaWNhdGlvbiB3ZWJ2aWV3XHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBBIGNhbGxiYWNrIGZ1bmN0aW9uIG9mIHRoZSBjZXJ0aWZpY2F0aW9uIGRhdGEgaXMgdHJpZ2dlcmVkIHdoZW4gdGhlIHdlYnZpZXcgaXMgY2xvc2VkXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNlcnRpZmljYXRpb24oY2VydGlmaWNhdGlvbk9iamVjdDogQ2VydGlmaWNhdGlvbk9iamVjdCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm4gY29yZG92YS5wbHVnaW5zLklhbXBvcnRDb3Jkb3ZhLmNlcnRpZmljYXRpb24oY2VydGlmaWNhdGlvbk9iamVjdCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==