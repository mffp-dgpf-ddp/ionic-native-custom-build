import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var ShopCheckout = /** @class */ (function (_super) {
    __extends(ShopCheckout, _super);
    function ShopCheckout() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ShopCheckout.prototype.registerAgent = function (options) { return cordova(this, "registerAgent", {}, arguments); };
    ShopCheckout.prototype.openProducts = function (options) { return cordova(this, "openProducts", {}, arguments); };
    ShopCheckout.prototype.openTransactions = function (options) { return cordova(this, "openTransactions", {}, arguments); };
    ShopCheckout.prototype.logout = function (options) { return cordova(this, "logout", {}, arguments); };
    ShopCheckout.prototype.isInitialized = function () { return cordova(this, "isInitialized", {}, arguments); };
    ShopCheckout.pluginName = "ShopCheckout";
    ShopCheckout.plugin = "cordova-plugin-shop-checkout";
    ShopCheckout.pluginRef = "shopCheckout";
    ShopCheckout.repo = "https://github.com/tradedepot/cordova-shop-checkout";
    ShopCheckout.platforms = ["Android"];
    ShopCheckout = __decorate([
        Injectable()
    ], ShopCheckout);
    return ShopCheckout;
}(IonicNativePlugin));
export { ShopCheckout };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3Nob3AtY2hlY2tvdXQvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBK0J0QyxnQ0FBaUI7Ozs7SUFPakQsb0NBQWEsYUFBQyxPQUFZO0lBVTFCLG1DQUFZLGFBQUMsT0FBWTtJQVV6Qix1Q0FBZ0IsYUFBQyxPQUFZO0lBUTdCLDZCQUFNLGFBQUMsT0FBWTtJQVFuQixvQ0FBYTs7Ozs7O0lBM0NGLFlBQVk7UUFEeEIsVUFBVSxFQUFFO09BQ0EsWUFBWTt1QkFoQ3pCO0VBZ0NrQyxpQkFBaUI7U0FBdEMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUGx1Z2luLCBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XHJcblxyXG4vKipcclxuICogQG5hbWUgU2hvcENoZWNrb3V0XHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGlzIGlzIGEgcGx1Z2luIHRoYXQgYWxsb3dzIHlvdXIgSW9uaWMgYXBwIHRvIHVzZSBTaG9wQ2hlY291dCBmb3IgQW5kcm9pZC5cclxuICogRm9sbG93IHRoZSBvZmZpY2FsIGRvY3VtZW50YXRpb24gdG8gc2V0dXAgdGhpcyBwbHVnaW4gY29ycmVjdGx5OiBodHRwczovL2RldmVsb3Blci5zaG9wdG9wdXAuY29tL2RvY3Mvc2hvcHRvcHVwLWZvci1jb3Jkb3ZhcGhvbmVnYXBcclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgU2hvcENoZWNrb3V0IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9zaG9wLWNoZWNrb3V0L25neCc7XHJcbiAqXHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc2hvcENoZWNrb3V0OiBTaG9wQ2hlY2tvdXQpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogdGhpcy5zaG9wQ2hlY2tvdXQucmVnaXN0ZXJBZ2VudCgpO1xyXG4gKiAuLi5cclxuICogdGhpcy5zaG9wQ2hlY2tvdXQub3BlblByb2R1Y3RzKCk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ1Nob3BDaGVja291dCcsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc2hvcC1jaGVja291dCcsXHJcbiAgcGx1Z2luUmVmOiAnc2hvcENoZWNrb3V0JyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3RyYWRlZGVwb3QvY29yZG92YS1zaG9wLWNoZWNrb3V0JyxcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTaG9wQ2hlY2tvdXQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogUmVnaXN0ZXIgYW4gYWdlbnRcclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7YW55fSBPcHRpb25zXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn0gUmV0dXJucyBhIHByb21pc2VcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgcmVnaXN0ZXJBZ2VudChvcHRpb25zOiBhbnkpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE9wZW4gcHJvZHVjdHMgdmlld1xyXG4gICAqIEBwYXJhbSBvcHRpb25zIHthbnl9IE9wdGlvbnNcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fSBSZXR1cm5zIGEgcHJvbWlzZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBvcGVuUHJvZHVjdHMob3B0aW9uczogYW55KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBPcGVuIHRyYW5uc2FjdGlvbnMgdmlld1xyXG4gICAqIEBwYXJhbSBvcHRpb25zIHthbnl9IE9wdGlvbnNcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHZvaWQ+fSBSZXR1cm5zIGEgcHJvbWlzZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBvcGVuVHJhbnNhY3Rpb25zKG9wdGlvbnM6IGFueSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTx2b2lkPn0gUmV0dXJucyBhIHByb21pc2VcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgbG9nb3V0KG9wdGlvbnM6IGFueSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxib29sZWFuPn0gUmV0dXJucyBhIHByb21pc2VcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgaXNJbml0aWFsaXplZCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19