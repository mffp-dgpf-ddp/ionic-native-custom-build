import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var Stepcounter = /** @class */ (function (_super) {
    __extends(Stepcounter, _super);
    function Stepcounter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Stepcounter.prototype.start = function (startingOffset) { return cordova(this, "start", {}, arguments); };
    Stepcounter.prototype.stop = function () { return cordova(this, "stop", {}, arguments); };
    Stepcounter.prototype.getTodayStepCount = function () { return cordova(this, "getTodayStepCount", {}, arguments); };
    Stepcounter.prototype.getStepCount = function () { return cordova(this, "getStepCount", {}, arguments); };
    Stepcounter.prototype.deviceCanCountSteps = function () { return cordova(this, "deviceCanCountSteps", {}, arguments); };
    Stepcounter.prototype.getHistory = function () { return cordova(this, "getHistory", {}, arguments); };
    Stepcounter.pluginName = "Stepcounter";
    Stepcounter.plugin = "cordova-plugin-stepcounter";
    Stepcounter.pluginRef = "stepcounter";
    Stepcounter.repo = "https://github.com/ihadeed/cordova-plugin-stepcounter";
    Stepcounter.platforms = ["Android"];
    Stepcounter = __decorate([
        Injectable()
    ], Stepcounter);
    return Stepcounter;
}(IonicNativePlugin));
export { Stepcounter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3N0ZXBjb3VudGVyL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWlDdkMsK0JBQWlCOzs7O0lBUWhELDJCQUFLLGFBQUMsY0FBc0I7SUFTNUIsMEJBQUk7SUFTSix1Q0FBaUI7SUFTakIsa0NBQVk7SUFTWix5Q0FBbUI7SUFTbkIsZ0NBQVU7Ozs7OztJQXJEQyxXQUFXO1FBRHZCLFVBQVUsRUFBRTtPQUNBLFdBQVc7c0JBbEN4QjtFQWtDaUMsaUJBQWlCO1NBQXJDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xyXG4vKipcclxuICogQG5hbWUgU3RlcGNvdW50ZXJcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIENvcmRvdmEgcGx1Z2luIGZvciB1c2luZyBkZXZpY2UncyBzdGVwY291bnRlciBvbiBBbmRyb2lkIChBUEkgPiAxOSlcclxuICpcclxuICogVXNlIHRvXHJcbiAqIC0gc3RhcnQgYW5kIHN0b3Agc3RlcGNvdW50ZXIgc2VydmljZVxyXG4gKiAtIHJlYWQgZGV2aWNlJ3Mgc3RlcGNvdW50ZXIgZGF0YVxyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBTdGVwY291bnRlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc3RlcGNvdW50ZXIvbmd4JztcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzdGVwY291bnRlcjogU3RlcGNvdW50ZXIpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogbGV0IHN0YXJ0aW5nT2Zmc2V0ID0gMDtcclxuICogdGhpcy5zdGVwY291bnRlci5zdGFydChzdGFydGluZ09mZnNldCkudGhlbihvblN1Y2Nlc3MgPT4gY29uc29sZS5sb2coJ3N0ZXBjb3VudGVyLXN0YXJ0IHN1Y2Nlc3MnLCBvblN1Y2Nlc3MpLCBvbkZhaWx1cmUgPT4gY29uc29sZS5sb2coJ3N0ZXBjb3VudGVyLXN0YXJ0IGVycm9yJywgb25GYWlsdXJlKSk7XHJcbiAqXHJcbiAqIHRoaXMuc3RlcGNvdW50ZXIuZ2V0SGlzdG9yeSgpLnRoZW4oaGlzdG9yeU9iaiA9PiBjb25zb2xlLmxvZygnc3RlcGNvdW50ZXItaGlzdG9yeSBzdWNjZXNzJywgaGlzdG9yeU9iaiksIG9uRmFpbHVyZSA9PiBjb25zb2xlLmxvZygnc3RlcGNvdW50ZXItaGlzdG9yeSBlcnJvcicsIG9uRmFpbHVyZSkpO1xyXG4gKlxyXG4gKiBgYGBcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdTdGVwY291bnRlcicsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tc3RlcGNvdW50ZXInLFxyXG4gIHBsdWdpblJlZjogJ3N0ZXBjb3VudGVyJyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2loYWRlZWQvY29yZG92YS1wbHVnaW4tc3RlcGNvdW50ZXInLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFN0ZXBjb3VudGVyIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IHRoZSBzdGVwIGNvdW50ZXJcclxuICAgKlxyXG4gICAqIEBwYXJhbSBzdGFydGluZ09mZnNldCB7bnVtYmVyfSB3aWxsIGJlIGFkZGVkIHRvIHRoZSB0b3RhbCBzdGVwcyBjb3VudGVkIGluIHRoaXMgc2Vzc2lvblxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueSB8IG51bWJlcj59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2VzcyBvciByZWplY3RzIG9uIGZhaWx1cmVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc3RhcnQoc3RhcnRpbmdPZmZzZXQ6IG51bWJlcik6IFByb21pc2U8bnVtYmVyIHwgYW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wIHRoZSBzdGVwIGNvdW50ZXJcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnkgfCBudW1iZXI+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3Mgd2l0aCB0aGUgYW1vdW50IG9mIHN0ZXBzIHNpbmNlIHRoZSBzdGFydCBjb21tYW5kIGhhcyBiZWVuIGNhbGxlZCwgb3IgcmVqZWN0cyBvbiBmYWlsdXJlXHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIHN0b3AoKTogUHJvbWlzZTxudW1iZXIgfCBhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0aGUgYW1vdW50IG9mIHN0ZXBzIGZvciB0b2RheSAob3IgLTEgaWYgaXQgbm8gZGF0YSBnaXZlbilcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnkgfCBudW1iZXI+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3Mgd2l0aCB0aGUgYW1vdW50IG9mIHN0ZXBzIHRvZGF5LCBvciByZWplY3RzIG9uIGZhaWx1cmVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0VG9kYXlTdGVwQ291bnQoKTogUHJvbWlzZTxudW1iZXIgfCBhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0aGUgYW1vdW50IG9mIHN0ZXBzIHNpbmNlIHRoZSBzdGFydCBjb21tYW5kIGhhcyBiZWVuIGNhbGxlZFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueSB8IG51bWJlcj59IFJldHVybnMgYSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgb24gc3VjY2VzcyB3aXRoIHRoZSBhbW91bnQgb2Ygc3RlcHMgc2luY2UgdGhlIHN0YXJ0IGNvbW1hbmQgaGFzIGJlZW4gY2FsbGVkLCBvciByZWplY3RzIG9uIGZhaWx1cmVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZ2V0U3RlcENvdW50KCk6IFByb21pc2U8bnVtYmVyIHwgYW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXR1cm5zIHRydWUvZmFsc2UgaWYgQW5kcm9pZCBkZXZpY2UgaXMgcnVubmluZyA+QVBJIGxldmVsIDE5ICYmIGhhcyB0aGUgc3RlcCBjb3VudGVyIEFQSSBhdmFpbGFibGVcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnkgfCBib29sZWFuPn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBvbiBzdWNjZXNzLCBvciByZWplY3RzIG9uIGZhaWx1cmVcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZGV2aWNlQ2FuQ291bnRTdGVwcygpOiBQcm9taXNlPGJvb2xlYW4gfCBhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0aGUgc3RlcCBoaXN0b3J5IChKYXZhU2NyaXB0IG9iamVjdClcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIG9uIHN1Y2Nlc3MsIG9yIHJlamVjdHMgb24gZmFpbHVyZVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBnZXRIaXN0b3J5KCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiJdfQ==