var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var AllInOneSDK = /** @class */ (function (_super) {
    __extends(AllInOneSDK, _super);
    function AllInOneSDK() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AllInOneSDK.prototype.startTransaction = function (options) { return cordova(this, "startTransaction", {}, arguments); };
    AllInOneSDK.pluginName = "AllInOneSDK";
    AllInOneSDK.plugin = "cordova-paytm-allinonesdk";
    AllInOneSDK.pluginRef = "AllInOneSDK";
    AllInOneSDK.repo = "https://github.com/paytm/paytm-allinonesdk-ionic-cordova.git";
    AllInOneSDK.platforms = ["Android", "iOS"];
    return AllInOneSDK;
}(IonicNativePlugin));
export { AllInOneSDK };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FsbC1pbi1vbmUtc2RrL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDhCQUEwRixNQUFNLG9CQUFvQixDQUFDOztJQTBDM0YsK0JBQWlCOzs7O0lBVWhELHNDQUFnQixhQUFDLE9BQTRCOzs7Ozs7c0JBckQvQztFQTJDaUMsaUJBQWlCO1NBQXJDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBsdWdpbiwgQ29yZG92YSwgQ29yZG92YVByb3BlcnR5LCBDb3Jkb3ZhSW5zdGFuY2UsIEluc3RhbmNlUHJvcGVydHksIElvbmljTmF0aXZlUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIEFsbEluT25lU0RLXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBQYXl0bSBBbGwtaW4tT25lIFNESyBwbHVnaW4gZm9yIENvcmRvdmEvSW9uaWMgQXBwbGljYXRpb25zXHJcbiAqIFBheXRtIEFsbC1pbi1PbmUgU0RLIHByb3ZpZGVzIGEgc3dpZnQsIHNlY3VyZSBhbmQgc2VhbWxlc3MgcGF5bWVudCBleHBlcmllbmNlIHRvIHlvdXIgdXNlcnMgYnkgaW52b2tpbmcgdGhlIFBheXRtIGFwcCAoaWYgaW5zdGFsbGVkIG9uIHlvdXIgdXNlcuKAmXMgc21hcnRwaG9uZSkgdG8gY29tcGxldGUgcGF5bWVudCBmb3IgeW91ciBvcmRlci5cclxuICogUGF5dG0gQWxsLWluLU9uZSBTREsgZW5hYmxlcyBwYXltZW50IGFjY2VwdGFuY2UgdmlhIFBheXRtIHdhbGxldCwgUGF5dG0gUGF5bWVudHMgQmFuaywgc2F2ZWQgRGViaXQvQ3JlZGl0IGNhcmRzLCBOZXQgQmFua2luZywgQkhJTSBVUEkgYW5kIEVNSSBhcyBhdmFpbGFibGUgaW4geW91ciBjdXN0b21lcuKAmXMgUGF5dG0gYWNjb3VudC4gSWYgUGF5dG0gYXBwIGlzIG5vdCBpbnN0YWxsZWQgb24gYSBjdXN0b21lcidzIGRldmljZSwgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgcHJvY2Vzc2VkIHZpYSB3ZWIgdmlldyB3aXRoaW4gdGhlIEFsbC1pbi1PbmUgU0RLLlxyXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBQYXl0bSBBbGwtaW4tT25lIFNESywgcGxlYXNlIHZpc2l0IGh0dHBzOi8vZGV2ZWxvcGVyLnBheXRtLmNvbS9kb2NzL2FsbC1pbi1vbmUtc2RrL1xyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBBbGxJbk9uZVNESyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYWxsLWluLW9uZS1zZGsvbmd4JztcclxuICpcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBhbGxJbk9uZVNESzogQWxsSW5PbmVTREspIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogRm9yIGJlbG93IHBhcmFtZXRlcnMgc2VlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay8pXHJcbiAqIGxldCBwYXltZW50SW50ZW50ID0geyBtaWQgOiBtZXJjaGFudElELCBvcmRlcklkOiBvcmRlcklkLCB0eG5Ub2tlbjogdHJhbnNhY3Rpb25Ub2tlbiwgYW1vdW50OiBhbW91bnQsIGlzU3RhZ2luZzogaXNTdGFnaW5nLCBjYWxsYmFja1VybDpjYWxsQmFja1VSTCB9XHJcbiAqXHJcbiAqIHRoaXMuYWxsSW5PbmVTREsuc3RhcnRUcmFuc2FjdGlvbihwYXltZW50SW50ZW50KVxyXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcclxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuICpcclxuICogYGBgXHJcbiAqXHJcbiAqIEZvciBpT1M6XHJcbiAqIEFmdGVyIGFkZGluZyB0aGUgcGx1Z2luLCBvcGVuIHRoZSBpT1MgcHJvamVjdCwgeW91IGNhbiBmaW5kIHRoZSBzYW1lIGF0IDxwcm9qZWN0TmFtZT4vcGxhdGZvcm1zL2lvcy5cclxuICogSW4gY2FzZSBtZXJjaGFudCBkb27igJl0IGhhdmUgY2FsbGJhY2sgVVJMLCBBZGQgYW4gZW50cnkgaW50byBJbmZvLnBsaXN0IExTQXBwbGljYXRpb25RdWVyaWVzU2NoZW1lcyhBcnJheSkgSXRlbSAwIChTdHJpbmcpLT4gcGF5dG1cclxuICogQWRkIGEgVVJMIFNjaGVtZSDigJxwYXl0beKAnSvigJ1NSUTigJ1cclxuICpcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdBbGxJbk9uZVNESycsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wYXl0bS1hbGxpbm9uZXNkaycsXHJcbiAgcGx1Z2luUmVmOiAnQWxsSW5PbmVTREsnLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vcGF5dG0vcGF5dG0tYWxsaW5vbmVzZGstaW9uaWMtY29yZG92YS5naXQnLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywnaU9TJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEFsbEluT25lU0RLIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xyXG5cclxuICAvKipcclxuICAgKiBUaGlzIGZ1bmN0aW9uIGNoZWNrcyBpZiBQYXl0bSBBcHBsaWNhdGlvbiBpcyBhdmFpbGFibGUgb24gdGhlIGRldmljZS5cclxuICAgKiBJZiBQYXl0bSBleGlzdHMgdGhlbiBpdCBpbnZva2VzIFBheXRtIEFwcGxpY2F0aW9uIHdpdGggdGhlIHBhcmFtZXRlcnMgc2VudCBhbmQgY3JlYXRlcyBhbiBvcmRlci5cclxuICAgKiBJZiB0aGUgUGF5dG0gQXBwbGljYXRpb24gaXMgbm90IGF2YWlsYWJsZSB0aGUgdHJhbnNhY3Rpb24gaXMgY29udGludWVkIG9uIGEgd2ViVmlldyB3aXRoaW4gQWxsLWluLU9uZSBTREsuXHJcbiAgICogQHBhcmFtIG9wdGlvbnMge1BheW1lbnRJbnRlbnRNb2RlbH0gVGhlc2UgcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQgYW5kIHdpbGwgYmUgdXNlZCB0byBjcmVhdGUgYW4gb3JkZXIuXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxQYXl0bVJlc3BvbnNlPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGEgdHJhbnNhY3Rpb24gY29tcGxldGVzKGJvdGggZmFpbGVkIGFuZCBzdWNjZXNzZnVsKS5cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc3RhcnRUcmFuc2FjdGlvbihvcHRpb25zIDogUGF5bWVudEludGVudE1vZGVsKTogUHJvbWlzZTxQYXl0bVJlc3BvbnNlPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSByZXNwb25zZSB0aGF0IHdpbGwgYmUgcmVjaWV2ZWQgd2hlbiBhbnkgdHJhbnNhY3Rpb24gaXMgY29tcGxldGVkXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFBheXRtUmVzcG9uc2V7XHJcbiAgICBtZXNzYWdlIDogc3RyaW5nO1xyXG4gICAgcmVzcG9uc2UgOiBzdHJpbmc7IC8vIEEgc3RyaW5naWZpZWQgcmVzcG9uc2Ugb2YgYSBoYXNobWFwIHJldHVybmVkIGZyb20gQWxsLWluLU9uZSBTREtcclxufVxyXG5cclxuLyoqXHJcbiAqIEZvciBiZWxvdyBwYXJhbWV0ZXJzIHNlZSBbZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kZXZlbG9wZXIucGF5dG0uY29tL2RvY3MvYWxsLWluLW9uZS1zZGsvKVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50SW50ZW50TW9kZWx7XHJcbiAgICBtaWQgOiBzdHJpbmc7IC8vIE1lcmNoYW50IElEXHJcbiAgICBvcmRlcklkIDogc3RyaW5nOyAvLyBPcmRlciBJRFxyXG4gICAgdHhuVG9rZW4gOiBzdHJpbmc7IC8vIFRyYW5zYWN0aW9uIFRva2VuXHJcbiAgICBhbW91bnQgOiBzdHJpbmc7IC8vIEFtb3VudFxyXG4gICAgaXNTdGFnaW5nOiBib29sZWFuOyAvLyBFbnZpcm9ubWVudFxyXG4gICAgY2FsbGJhY2tVcmw6IHN0cmluZzsgLy8gQ2FsbGJhY2sgVVJMXHJcbn1cclxuIl19