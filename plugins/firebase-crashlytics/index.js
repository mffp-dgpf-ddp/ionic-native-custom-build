var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var FirebaseCrashlyticsOriginal = /** @class */ (function (_super) {
    __extends(FirebaseCrashlyticsOriginal, _super);
    function FirebaseCrashlyticsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseCrashlyticsOriginal.prototype.initialise = function () { return cordova(this, "initialise", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.crash = function () { return cordova(this, "crash", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.logPriority = function (priority, tag, message) { return cordova(this, "logPriority", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.log = function (message) { return cordova(this, "log", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.logException = function (message) { return cordova(this, "logException", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setString = function (key, value) { return cordova(this, "setString", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setBool = function (key, value) { return cordova(this, "setBool", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setDouble = function (key, value) { return cordova(this, "setDouble", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setFloat = function (key, value) { return cordova(this, "setFloat", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setInt = function (key, value) { return cordova(this, "setInt", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.prototype.setUserIdentifier = function (identifier) { return cordova(this, "setUserIdentifier", { "sync": true }, arguments); };
    FirebaseCrashlyticsOriginal.pluginName = "FirebaseCrashlytics";
    FirebaseCrashlyticsOriginal.plugin = "cordova-plugin-firebase-crashlytics";
    FirebaseCrashlyticsOriginal.pluginRef = "FirebaseCrashlytics";
    FirebaseCrashlyticsOriginal.repo = "https://github.com/ReallySmallSoftware/cordova-plugin-firebase-crashlytics";
    FirebaseCrashlyticsOriginal.install = "ionic cordova plugin add cordova-plugin-firebase-crashlytics --variable ANDROID_FIREBASE_CORE_VERSION=16.0.0";
    FirebaseCrashlyticsOriginal.installVariables = ["ANDROID_FIREBASE_CORE_VERSION"];
    FirebaseCrashlyticsOriginal.platforms = ["Android", "iOS"];
    return FirebaseCrashlyticsOriginal;
}(IonicNativePlugin));
var FirebaseCrashlytics = new FirebaseCrashlyticsOriginal();
export { FirebaseCrashlytics };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2ZpcmViYXNlLWNyYXNobHl0aWNzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWlDL0IsdUNBQWlCOzs7O0lBU3hELHdDQUFVO0lBWVYsbUNBQUs7SUFlTCx5Q0FBVyxhQUFDLFFBQWdCLEVBQUUsR0FBVyxFQUFFLE9BQWU7SUFhMUQsaUNBQUcsYUFBQyxPQUFlO0lBYW5CLDBDQUFZLGFBQUMsT0FBZTtJQWM1Qix1Q0FBUyxhQUFDLEdBQVcsRUFBRSxLQUFhO0lBY3BDLHFDQUFPLGFBQUMsR0FBVyxFQUFFLEtBQWM7SUFjbkMsdUNBQVMsYUFBQyxHQUFXLEVBQUUsS0FBYTtJQWNwQyxzQ0FBUSxhQUFDLEdBQVcsRUFBRSxLQUFhO0lBY25DLG9DQUFNLGFBQUMsR0FBVyxFQUFFLEtBQWE7SUFhakMsK0NBQWlCLGFBQUMsVUFBa0I7Ozs7Ozs7OzhCQW5MdEM7RUFrQ3lDLGlCQUFpQjtTQUE3QyxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIEZpcmViYXNlIENyYXNobHl0aWNzXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBBIEdvb2dsZSBGaXJlYmFzZSBDcmFzaGx5dGljcyBwbHVnaW4gdG8gZW5hYmxlIGNhcHR1cmUgb2YgY3Jhc2ggcmVwb3J0cy5cclxuICpcclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgRmlyZWJhc2VDcmFzaGx5dGljcyB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvZmlyZWJhc2UtY3Jhc2hseXRpY3Mvbmd4JztcclxuICpcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBmaXJlYmFzZUNyYXNobHl0aWNzOiBGaXJlYmFzZUNyYXNobHl0aWNzKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIGNvbnN0IGNyYXNobHl0aWNzID0gdGhpcy5maXJlYmFzZUNyYXNobHl0aWNzLmluaXRpYWxpc2UoKTtcclxuICogY3Jhc2hseXRpY3MubG9nRXhjZXB0aW9uKCdteSBjYXVnaHQgZXhjZXB0aW9uJyk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0ZpcmViYXNlQ3Jhc2hseXRpY3MnLFxyXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWZpcmViYXNlLWNyYXNobHl0aWNzJyxcclxuICBwbHVnaW5SZWY6ICdGaXJlYmFzZUNyYXNobHl0aWNzJyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1JlYWxseVNtYWxsU29mdHdhcmUvY29yZG92YS1wbHVnaW4tZmlyZWJhc2UtY3Jhc2hseXRpY3MnLFxyXG4gIGluc3RhbGw6XHJcbiAgICAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtcGx1Z2luLWZpcmViYXNlLWNyYXNobHl0aWNzIC0tdmFyaWFibGUgQU5EUk9JRF9GSVJFQkFTRV9DT1JFX1ZFUlNJT049MTYuMC4wJyxcclxuICBpbnN0YWxsVmFyaWFibGVzOiBbJ0FORFJPSURfRklSRUJBU0VfQ09SRV9WRVJTSU9OJ10sXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEZpcmViYXNlQ3Jhc2hseXRpY3MgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogU2ltcGx5IGFkZCB0aGUgcGx1Z2luIHRvIGdldCB0aGUgZGVmYXVsdCBDcmFzaGx5dGljcyBmdW5jdGlvbmFsaXR5LiBOb3RlIHRoYXQgY3Jhc2hlcyBhbmQgbG9nZ2VkIGV4Y2VwdGlvbnMgd2lsbCBvbmx5IGJlIHJlcG9ydGVkIHdoZW4gdGhlIGFwcGxpY2F0aW9uIHJlc3RhcnRzLiBJbiBvcmRlciB0byBsb2cgY2F1Z2h0IGV4Y2VwdGlvbnMgdGhlIGZvbGxvd2luZyBjYW4gYmUgdXNlZDpcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN5bmM6IHRydWUsXHJcbiAgfSlcclxuICBpbml0aWFsaXNlKCk6IGFueSB7XHJcbiAgICByZXR1cm47IC8vIFdlIGFkZCByZXR1cm47IGhlcmUgdG8gYXZvaWQgYW55IElERSAvIENvbXBpbGVyIGVycm9yc1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBmb3JjZWQgY3Jhc2guIFZpc2libGUgaW4gY29uc29sZSBhZnRlciByZXN0YXJ0IG9mIGFwcGxpY2F0aW9uLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge3ZvaWR9XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgc3luYzogdHJ1ZSxcclxuICB9KVxyXG4gIGNyYXNoKCk6IHZvaWQge1xyXG4gICAgcmV0dXJuOyAvLyBXZSBhZGQgcmV0dXJuOyBoZXJlIHRvIGF2b2lkIGFueSBJREUgLyBDb21waWxlciBlcnJvcnNcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvZyBhIHByaW9yaXR5IG1lc3NhZ2UuIFdpbGwgb25seSBiZSBsb2dnZWQgaW4gdGhlIGV2ZW50IG9mIGEgY3Jhc2guXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge251bWJlcn0gcHJpb3JpdHlcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGFnXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VcclxuICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgKi9cclxuICBAQ29yZG92YSh7XHJcbiAgICBzeW5jOiB0cnVlLFxyXG4gIH0pXHJcbiAgbG9nUHJpb3JpdHkocHJpb3JpdHk6IG51bWJlciwgdGFnOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTG9nIGEgbWVzc2FnZS4gV2lsbCBvbmx5IGJlIGxvZ2dlZCBpbiB0aGUgZXZlbnQgb2YgYSBjcmFzaC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXHJcbiAgICogQHJldHVybnMge3ZvaWR9XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgc3luYzogdHJ1ZSxcclxuICB9KVxyXG4gIGxvZyhtZXNzYWdlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvZyB3aGVuIGEgaGFuZGxlZCBleGNlcHRpb24gaGFzIGhhcHBlbmVkLiBWaXNpYmxlIGluIGNvbnNvbGUgYWZ0ZXIgcmVzdGFydCBvZiBhcHBsaWNhdGlvbi5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXHJcbiAgICogQHJldHVybnMge3ZvaWR9XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgc3luYzogdHJ1ZSxcclxuICB9KVxyXG4gIGxvZ0V4Y2VwdGlvbihtZXNzYWdlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldCBleHRyYSBrZXkvdmFsdWUgc3RyaW5nIHZhbHVlLiBXaWxsIG9ubHkgYmUgbG9nZ2VkIGluIHRoZSBldmVudCBvZiBhIGNyYXNoLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN5bmM6IHRydWUsXHJcbiAgfSlcclxuICBzZXRTdHJpbmcoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldCBleHRyYSBrZXkvdmFsdWUgYm9vbCB2YWx1ZS4gV2lsbCBvbmx5IGJlIGxvZ2dlZCBpbiB0aGUgZXZlbnQgb2YgYSBjcmFzaC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZhbHVlXHJcbiAgICogQHJldHVybnMge3ZvaWR9XHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgc3luYzogdHJ1ZSxcclxuICB9KVxyXG4gIHNldEJvb2woa2V5OiBzdHJpbmcsIHZhbHVlOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXQgZXh0cmEga2V5L3ZhbHVlIGRvdWJsZSB2YWx1ZS4gV2lsbCBvbmx5IGJlIGxvZ2dlZCBpbiB0aGUgZXZlbnQgb2YgYSBjcmFzaC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcclxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWVcclxuICAgKiBAcmV0dXJucyB7dm9pZH1cclxuICAgKi9cclxuICBAQ29yZG92YSh7XHJcbiAgICBzeW5jOiB0cnVlLFxyXG4gIH0pXHJcbiAgc2V0RG91YmxlKGtleTogc3RyaW5nLCB2YWx1ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZXQgZXh0cmEga2V5L3ZhbHVlIGZsb2F0IHZhbHVlLiBXaWxsIG9ubHkgYmUgbG9nZ2VkIGluIHRoZSBldmVudCBvZiBhIGNyYXNoLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN5bmM6IHRydWUsXHJcbiAgfSlcclxuICBzZXRGbG9hdChrZXk6IHN0cmluZywgdmFsdWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2V0IGV4dHJhIGtleS92YWx1ZSBpbnRlZ2VyIHZhbHVlLiBXaWxsIG9ubHkgYmUgbG9nZ2VkIGluIHRoZSBldmVudCBvZiBhIGNyYXNoLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN5bmM6IHRydWUsXHJcbiAgfSlcclxuICBzZXRJbnQoa2V5OiBzdHJpbmcsIHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldCB0aGUgaWRlbnRpZmllciBmb3IgdGhlIHVzZXIuIFRha2UgY2FyZSB3aGVuIHVzaW5nIHRoaXMgbWV0aG9kIGFuZCBlbnN1cmUgeW91IHByaXZhY3kgcG9saWN5IGlzIHVwZGF0ZWQgYWNjb3JkaW5nbHkuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRlbnRpZmllclxyXG4gICAqIEByZXR1cm5zIHt2b2lkfVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN5bmM6IHRydWUsXHJcbiAgfSlcclxuICBzZXRVc2VySWRlbnRpZmllcihpZGVudGlmaWVyOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19